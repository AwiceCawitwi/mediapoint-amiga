SAS AMIGA 680x0OBJ Module Disassembler V6.01
Copyright © 1992 SAS Institute, Inc.


Amiga Object File Loader V1.00
68000 Instruction Set

EXTERNAL DEFINITIONS

_LIBUA_PrintStandardList 0000-00    _LIBUA_ScrollStandardList 0304-00    
_LIBUA_SelectStandardListLine 04C6-00    _LIBUA_ShortenString 0986-00    
_LIBUA_ShortenStringFront 09E4-00    _LIBUA_PrintInBox 0A3C-00    
_LIBUA_printSeveralLines 0C0C-00    _LIBUA_SwitchMouseMoveOn 0DA0-00    
_LIBUA_SwitchMouseMoveOff 0DD6-00    _LIBUA_GetPropSlider 0E0C-00    
_LIBUA_GetHorizPropSlider 0E66-00    _LIBUA_InitPropSlider 0EC0-00    
_LIBUA_InitHorizPropSlider 0F7C-00    _LIBUA_SetPropSlider 1038-00    
_LIBUA_SetHorizPropSlider 114A-00    _LIBUA_SwitchFlagsOn 125C-00    
_LIBUA_SwitchFlagsOff 129E-00    _PrintStdListLine 12E4-00

SECTION 00 "text" 000013D4 BYTES
;   1: #include "mllib_includes.h"
;   2: 
;   3: /**** externals ****/
;   4: 
;   5: extern struct MsgPort *capsport;
;   6: 
;   7: /**** functions ****/
;   8: 
;   9: /*******************************************************************/
;  10: /*
;  11:  *   PUBLIC FUNCTIONS
;  12:  *
;  13:  *******************************************************************/
;  14: 
;  15: /******** PrintStandardList() ********/
;  16: /*
;  17:  * GR is the whole display box
;  18:  *
;  19:  * init the static of this function by a dummy call with top set to -1
;  20:  *
;  21:  */
;  22: 
;  23: void __saveds __asm LIBUA_PrintStandardList(register __a0 struct ScrollRecord *SR,
;  24: 																						register __d1 int top,
;  25: 																						register __a1 TEXT *ptrlist[])
;  26: {
       | 0000  9EFC 0024                      SUBA.W      #0024,A7
       | 0004  48E7 3F3E                      MOVEM.L     D2-D7/A2-A6,-(A7)
       | 0008  2E01                           MOVE.L      D1,D7
       | 000A  2649                           MOVEA.L     A1,A3
       | 000C  2A48                           MOVEA.L     A0,A5
       | 000E  49EE  0000-XX.2                LEA         _LinkerDB(A6),A4
;  27: int i,y,w,lineHeight,lace;
;  28: static prevTop=0;
;  29: 
;  30: 	if (top==-1)
       | 0012  2F4E 0044                      MOVE.L      A6,0044(A7)
       | 0016  70FF                           MOVEQ       #FF,D0
       | 0018  BE80                           CMP.L       D0,D7
       | 001A  660E                           BNE.B       002A
;  31: 	{
;  32: 		prevTop=9999;
       | 001C  203C 0000 270F                 MOVE.L      #0000270F,D0
;  33: 		return;
       | 0022  2940  0000-01.2                MOVE.L      D0,01.00000000(A4)
       | 0026  6000 02D2                      BRA.W       02FA
;  34: 	}
;  35: 	else if (top==prevTop)
       | 002A  202C  0000-01.2                MOVE.L      01.00000000(A4),D0
       | 002E  B087                           CMP.L       D7,D0
       | 0030  6604                           BNE.B       0036
;  36: 		return;
       | 0032  6000 02C6                      BRA.W       02FA
;  37: 	else
;  38: 		prevTop=top;
       | 0036  2947  0000-01.2                MOVE.L      D7,01.00000000(A4)
;  39: 
;  40: 	y=0;
       | 003A  7A00                           MOVEQ       #00,D5
;  41: 	lineHeight = (SR->GR->y2 - SR->GR->y1) / SR->numDisplay;
       | 003C  2055                           MOVEA.L     (A5),A0
       | 003E  3028 0006                      MOVE.W      0006(A0),D0
       | 0042  48C0                           EXT.L       D0
       | 0044  3228 0002                      MOVE.W      0002(A0),D1
       | 0048  48C1                           EXT.L       D1
       | 004A  9081                           SUB.L       D1,D0
       | 004C  222D 0014                      MOVE.L      0014(A5),D1
       | 0050  4EBA  0000-XX.1                JSR         __CXD33(PC)
;  42: 
;  43: 	if (SR->window->WScreen->ViewPort.Modes & LACE)
       | 0054  206D 0004                      MOVEA.L     0004(A5),A0
       | 0058  2268 002E                      MOVEA.L     002E(A0),A1
       | 005C  2F40 004C                      MOVE.L      D0,004C(A7)
       | 0060  0829 0002 004D                 BTST        #0002,004D(A1)
       | 0066  6708                           BEQ.B       0070
;  44: 		lace=1;
       | 0068  7001                           MOVEQ       #01,D0
       | 006A  2F40 0048                      MOVE.L      D0,0048(A7)
       | 006E  6004                           BRA.B       0074
;  45: 	else
;  46: 		lace=0;
       | 0070  42AF 0048                      CLR.L       0048(A7)
;  47: 
;  48: 	for(i=0; i<SR->numDisplay; i++)
       | 0074  7C00                           MOVEQ       #00,D6
       | 0076  BCAD 0014                      CMP.L       0014(A5),D6
       | 007A  6C00 027E                      BGE.W       02FA
;  49: 	{
;  50: 		if ( (top+i) >= SR->numEntries )
       | 007E  2007                           MOVE.L      D7,D0
       | 0080  D086                           ADD.L       D6,D0
       | 0082  B0AD 0018                      CMP.L       0018(A5),D0
       | 0086  6C00 0272                      BGE.W       02FA
;  51: 			break;
;  52: 
;  53: 		if (SR->entryWidth==-1)
       | 008A  70FF                           MOVEQ       #FF,D0
       | 008C  B0AD 0010                      CMP.L       0010(A5),D0
       | 0090  6600 00EC                      BNE.W       017E
;  54: 		{
;  55: 			if ( SR->sublist )
       | 0094  4AAD 001C                      TST.L       001C(A5)
       | 0098  671A                           BEQ.B       00B4
;  56: 				w = ((SR->GR->x2-SR->GR->x1)/2);
       | 009A  2055                           MOVEA.L     (A5),A0
       | 009C  3028 0004                      MOVE.W      0004(A0),D0
       | 00A0  48C0                           EXT.L       D0
       | 00A2  3210                           MOVE.W      (A0),D1
       | 00A4  48C1                           EXT.L       D1
       | 00A6  9081                           SUB.L       D1,D0
       | 00A8  4A80                           TST.L       D0
       | 00AA  6A02                           BPL.B       00AE
       | 00AC  5280                           ADDQ.L      #1,D0
       | 00AE  E280                           ASR.L       #1,D0
       | 00B0  2800                           MOVE.L      D0,D4
       | 00B2  6002                           BRA.B       00B6
;  57: 			else
;  58: 				w = 0;
       | 00B4  7800                           MOVEQ       #00,D4
;  59: 
;  60: 			PrintStdListLine(	SR->window, SR->GR,
       | 00B6  2055                           MOVEA.L     (A5),A0
       | 00B8  3010                           MOVE.W      (A0),D0
       | 00BA  48C0                           EXT.L       D0
       | 00BC  3228 0002                      MOVE.W      0002(A0),D1
       | 00C0  48C1                           EXT.L       D1
       | 00C2  D285                           ADD.L       D5,D1
       | 00C4  3428 0004                      MOVE.W      0004(A0),D2
       | 00C8  48C2                           EXT.L       D2
       | 00CA  9484                           SUB.L       D4,D2
       | 00CC  3628 0002                      MOVE.W      0002(A0),D3
       | 00D0  48C3                           EXT.L       D3
       | 00D2  D685                           ADD.L       D5,D3
       | 00D4  226D 0004                      MOVEA.L     0004(A5),A1
       | 00D8  2469 0032                      MOVEA.L     0032(A1),A2
       | 00DC  2F42 0034                      MOVE.L      D2,0034(A7)
       | 00E0  7400                           MOVEQ       #00,D2
       | 00E2  342A 003A                      MOVE.W      003A(A2),D2
       | 00E6  D682                           ADD.L       D2,D3
       | 00E8  5283                           ADDQ.L      #1,D3
       | 00EA  2407                           MOVE.L      D7,D2
       | 00EC  D486                           ADD.L       D6,D2
       | 00EE  2F43 0038                      MOVE.L      D3,0038(A7)
       | 00F2  2602                           MOVE.L      D2,D3
       | 00F4  E583                           ASL.L       #2,D3
;  61: 												SR->GR->x1, SR->GR->y1+y,
;  62: 												SR->GR->x2-w, SR->GR->y1+y + SR->window->RPort->TxHeight +1,
;  63: 												(UBYTE *)ptrlist[top+i]);
       | 00F6  2F33 3800                      MOVE.L      00(A3,D3.L),-(A7)
       | 00FA  2F2F 003C                      MOVE.L      003C(A7),-(A7)
       | 00FE  2F2F 003C                      MOVE.L      003C(A7),-(A7)
       | 0102  2F01                           MOVE.L      D1,-(A7)
       | 0104  2F00                           MOVE.L      D0,-(A7)
       | 0106  2F08                           MOVE.L      A0,-(A7)
       | 0108  2F09                           MOVE.L      A1,-(A7)
       | 010A  6100 11D8                      BSR.W       12E4
       | 010E  4FEF 001C                      LEA         001C(A7),A7
;  64: 
;  65: 			if ( SR->sublist )
       | 0112  202D 001C                      MOVE.L      001C(A5),D0
       | 0116  6700 00D0                      BEQ.W       01E8
;  66: 				PrintStdListLine(	SR->window, SR->GR,
       | 011A  2055                           MOVEA.L     (A5),A0
       | 011C  3210                           MOVE.W      (A0),D1
       | 011E  48C1                           EXT.L       D1
       | 0120  D284                           ADD.L       D4,D1
       | 0122  5781                           SUBQ.L      #3,D1
       | 0124  3428 0002                      MOVE.W      0002(A0),D2
       | 0128  48C2                           EXT.L       D2
       | 012A  D485                           ADD.L       D5,D2
       | 012C  3628 0004                      MOVE.W      0004(A0),D3
       | 0130  48C3                           EXT.L       D3
       | 0132  3028 0002                      MOVE.W      0002(A0),D0
       | 0136  48C0                           EXT.L       D0
       | 0138  D085                           ADD.L       D5,D0
       | 013A  226D 0004                      MOVEA.L     0004(A5),A1
       | 013E  2469 0032                      MOVEA.L     0032(A1),A2
       | 0142  2F43 0034                      MOVE.L      D3,0034(A7)
       | 0146  7600                           MOVEQ       #00,D3
       | 0148  362A 003A                      MOVE.W      003A(A2),D3
       | 014C  D083                           ADD.L       D3,D0
       | 014E  5280                           ADDQ.L      #1,D0
       | 0150  2607                           MOVE.L      D7,D3
       | 0152  D686                           ADD.L       D6,D3
       | 0154  2F40 0038                      MOVE.L      D0,0038(A7)
       | 0158  2003                           MOVE.L      D3,D0
       | 015A  E580                           ASL.L       #2,D0
       | 015C  246D 001C                      MOVEA.L     001C(A5),A2
       | 0160  D5C0                           ADDA.L      D0,A2
;  67: 													SR->GR->x1 + w - 3,
;  68: 													SR->GR->y1+y,
;  69: 													SR->GR->x2, SR->GR->y1+y + SR->window->RPort->TxHeight +1,
;  70: 													(UBYTE *)SR->sublist[top+i]);
       | 0162  2F12                           MOVE.L      (A2),-(A7)
       | 0164  2F2F 003C                      MOVE.L      003C(A7),-(A7)
       | 0168  2F2F 003C                      MOVE.L      003C(A7),-(A7)
       | 016C  2F02                           MOVE.L      D2,-(A7)
       | 016E  2F01                           MOVE.L      D1,-(A7)
       | 0170  2F08                           MOVE.L      A0,-(A7)
       | 0172  2F09                           MOVE.L      A1,-(A7)
       | 0174  6100 116E                      BSR.W       12E4
       | 0178  4FEF 001C                      LEA         001C(A7),A7
       | 017C  606A                           BRA.B       01E8
;  71: 		}
;  72: 		else
;  73: 			PrintStdListLine(	SR->window, SR->GR,
       | 017E  2055                           MOVEA.L     (A5),A0
       | 0180  3010                           MOVE.W      (A0),D0
       | 0182  48C0                           EXT.L       D0
       | 0184  3228 0002                      MOVE.W      0002(A0),D1
       | 0188  48C1                           EXT.L       D1
       | 018A  D285                           ADD.L       D5,D1
       | 018C  3428 0004                      MOVE.W      0004(A0),D2
       | 0190  48C2                           EXT.L       D2
       | 0192  3628 0002                      MOVE.W      0002(A0),D3
       | 0196  48C3                           EXT.L       D3
       | 0198  D685                           ADD.L       D5,D3
       | 019A  226D 0004                      MOVEA.L     0004(A5),A1
       | 019E  2469 0032                      MOVEA.L     0032(A1),A2
       | 01A2  2F42 0034                      MOVE.L      D2,0034(A7)
       | 01A6  7400                           MOVEQ       #00,D2
       | 01A8  342A 003A                      MOVE.W      003A(A2),D2
       | 01AC  D682                           ADD.L       D2,D3
       | 01AE  5283                           ADDQ.L      #1,D3
       | 01B0  2407                           MOVE.L      D7,D2
       | 01B2  D486                           ADD.L       D6,D2
       | 01B4  2F40 002C                      MOVE.L      D0,002C(A7)
       | 01B8  2002                           MOVE.L      D2,D0
       | 01BA  2F41 0030                      MOVE.L      D1,0030(A7)
       | 01BE  222D 0010                      MOVE.L      0010(A5),D1
       | 01C2  4EBA  0000-XX.1                JSR         __CXM33(PC)
       | 01C6  246D 0008                      MOVEA.L     0008(A5),A2
       | 01CA  D5C0                           ADDA.L      D0,A2
;  74: 												SR->GR->x1, SR->GR->y1+y,
;  75: 												SR->GR->x2, SR->GR->y1+y + SR->window->RPort->TxHeight +1,
;  76: 												SR->list+((top+i)*SR->entryWidth));
       | 01CC  2F0A                           MOVE.L      A2,-(A7)
       | 01CE  2F03                           MOVE.L      D3,-(A7)
       | 01D0  2F2F 003C                      MOVE.L      003C(A7),-(A7)
       | 01D4  2F2F 003C                      MOVE.L      003C(A7),-(A7)
       | 01D8  2F2F 003C                      MOVE.L      003C(A7),-(A7)
       | 01DC  2F08                           MOVE.L      A0,-(A7)
       | 01DE  2F09                           MOVE.L      A1,-(A7)
       | 01E0  6100 1102                      BSR.W       12E4
       | 01E4  4FEF 001C                      LEA         001C(A7),A7
;  77: 
;  78: 		y += SR->window->RPort->TxHeight;
       | 01E8  206D 0004                      MOVEA.L     0004(A5),A0
       | 01EC  2268 0032                      MOVEA.L     0032(A0),A1
       | 01F0  7000                           MOVEQ       #00,D0
       | 01F2  3029 003A                      MOVE.W      003A(A1),D0
       | 01F6  DA80                           ADD.L       D0,D5
;  79: 
;  80: 		if ( SR->selectionList!=NULL && *(SR->selectionList+top+i) == 1 )
       | 01F8  202D 000C                      MOVE.L      000C(A5),D0
       | 01FC  6700 00F2                      BEQ.W       02F0
       | 0200  2240                           MOVEA.L     D0,A1
       | 0202  D3C7                           ADDA.L      D7,A1
       | 0204  D3C6                           ADDA.L      D6,A1
       | 0206  7001                           MOVEQ       #01,D0
       | 0208  B011                           CMP.B       (A1),D0
       | 020A  6600 00E4                      BNE.W       02F0
;  81: 		{
;  82: 			SafeSetWriteMask(SR->window->RPort, 0x7);
       | 020E  226C  0000-XX.2                MOVEA.L     _GfxBase(A4),A1
       | 0212  3029 0014                      MOVE.W      0014(A1),D0
       | 0216  7227                           MOVEQ       #27,D1
       | 0218  B041                           CMP.W       D1,D0
       | 021A  640C                           BCC.B       0228
       | 021C  2468 0032                      MOVEA.L     0032(A0),A2
       | 0220  157C 0007 0018                 MOVE.B      #07,0018(A2)
       | 0226  600C                           BRA.B       0234
       | 0228  2C49                           MOVEA.L     A1,A6
       | 022A  2068 0032                      MOVEA.L     0032(A0),A0
       | 022E  7007                           MOVEQ       #07,D0
       | 0230  4EAE FC28                      JSR         FC28(A6)
;  83: 			SetDrMd(SR->window->RPort, JAM2|COMPLEMENT);
       | 0234  206D 0004                      MOVEA.L     0004(A5),A0
       | 0238  2268 0032                      MOVEA.L     0032(A0),A1
       | 023C  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 0240  7003                           MOVEQ       #03,D0
       | 0242  4EAE FE9E                      JSR         FE9E(A6)
;  84: 
;  85: 			RectFill(	SR->window->RPort,
       | 0246  206D 0004                      MOVEA.L     0004(A5),A0
       | 024A  2255                           MOVEA.L     (A5),A1
       | 024C  3011                           MOVE.W      (A1),D0
       | 024E  48C0                           EXT.L       D0
       | 0250  5480                           ADDQ.L      #2,D0
       | 0252  3229 0002                      MOVE.W      0002(A1),D1
       | 0256  48C1                           EXT.L       D1
       | 0258  2F40 0030                      MOVE.L      D0,0030(A7)
       | 025C  202F 004C                      MOVE.L      004C(A7),D0
       | 0260  2F41 0034                      MOVE.L      D1,0034(A7)
       | 0264  2206                           MOVE.L      D6,D1
       | 0266  2C6F 0044                      MOVEA.L     0044(A7),A6
       | 026A  4EBA  0000-XX.1                JSR         __CXM33(PC)
       | 026E  222F 0034                      MOVE.L      0034(A7),D1
       | 0272  D280                           ADD.L       D0,D1
       | 0274  5481                           ADDQ.L      #2,D1
       | 0276  3429 0004                      MOVE.W      0004(A1),D2
       | 027A  48C2                           EXT.L       D2
       | 027C  5582                           SUBQ.L      #2,D2
       | 027E  3629 0002                      MOVE.W      0002(A1),D3
       | 0282  48C3                           EXT.L       D3
       | 0284  D6AF 0048                      ADD.L       0048(A7),D3
       | 0288  2268 0032                      MOVEA.L     0032(A0),A1
       | 028C  2F42 0040                      MOVE.L      D2,0040(A7)
       | 0290  7400                           MOVEQ       #00,D2
       | 0292  3429 003E                      MOVE.W      003E(A1),D2
       | 0296  D682                           ADD.L       D2,D3
       | 0298  D680                           ADD.L       D0,D3
       | 029A  5683                           ADDQ.L      #3,D3
;  86: 								SR->GR->x1+2,
;  87: 								SR->GR->y1+2 + lineHeight*i,
;  88: 								SR->GR->x2-2,
;  89: 								SR->GR->y1+3 + lace + SR->window->RPort->TxBaseline + lineHeight*i);
       | 029C  2268 0032                      MOVEA.L     0032(A0),A1
       | 02A0  202F 0030                      MOVE.L      0030(A7),D0
       | 02A4  242F 0040                      MOVE.L      0040(A7),D2
       | 02A8  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 02AC  4EAE FECE                      JSR         FECE(A6)
;  90: 
;  91: 			SetDrMd(SR->window->RPort, JAM1);
       | 02B0  206D 0004                      MOVEA.L     0004(A5),A0
       | 02B4  2268 0032                      MOVEA.L     0032(A0),A1
       | 02B8  7000                           MOVEQ       #00,D0
       | 02BA  4EAE FE9E                      JSR         FE9E(A6)
;  92: 			SafeSetWriteMask(SR->window->RPort, 0xff);
       | 02BE  302E 0014                      MOVE.W      0014(A6),D0
       | 02C2  7227                           MOVEQ       #27,D1
       | 02C4  B041                           CMP.W       D1,D0
       | 02C6  2C6F 0044                      MOVEA.L     0044(A7),A6
       | 02CA  6410                           BCC.B       02DC
       | 02CC  206D 0004                      MOVEA.L     0004(A5),A0
       | 02D0  2268 0032                      MOVEA.L     0032(A0),A1
       | 02D4  137C 00FF 0018                 MOVE.B      #FF,0018(A1)
       | 02DA  6014                           BRA.B       02F0
       | 02DC  206D 0004                      MOVEA.L     0004(A5),A0
       | 02E0  2068 0032                      MOVEA.L     0032(A0),A0
       | 02E4  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 02E8  7000                           MOVEQ       #00,D0
       | 02EA  4600                           NOT.B       D0
       | 02EC  4EAE FC28                      JSR         FC28(A6)
       | 02F0  2C6F 0044                      MOVEA.L     0044(A7),A6
;  93: 		}
;  94: 	}
       | 02F4  5286                           ADDQ.L      #1,D6
       | 02F6  6000 FD7E                      BRA.W       0076
;  95: }
       | 02FA  4CDF 7CFC                      MOVEM.L     (A7)+,D2-D7/A2-A6
       | 02FE  DEFC 0024                      ADDA.W      #0024,A7
       | 0302  4E75                           RTS
;  96: 
;  97: /******** ScrollStandardList() ********/
;  98: /*
;  99:  * GR is the whole display box
; 100:  *
; 101:  */
; 102: 
; 103: void __saveds __asm LIBUA_ScrollStandardList(	register __a0 struct ScrollRecord *SR,
; 104: 																							register __a1 int *top,
; 105: 																							register __a2 struct Gadget *g,
; 106: 																							register __a3 TEXT *ptrlist[],
; 107: 																							register __a5 struct EventData *oldCED )
; 108: {
       | 0304  9EFC 0044                      SUBA.W      #0044,A7
       | 0308  48E7 373E                      MOVEM.L     D2-D3/D5-D7/A2-A6,-(A7)
       | 030C  49EE  0000-XX.2                LEA         _LinkerDB(A6),A4
       | 0310  2F49 002C                      MOVE.L      A1,002C(A7)
; 109: ULONG signals, sigMask;
; 110: BOOL loop=TRUE;
       | 0314  7A01                           MOVEQ       #01,D5
; 111: struct IntuiMessage *message;
; 112: BOOL mouseMoved=FALSE;
       | 0316  426F 0036                      CLR.W       0036(A7)
; 113: int myTop;
; 114: struct EventData CED;
; 115: LONG f;
; 116: 
; 117: 	if ( oldCED->Qualifier & IEQUALIFIER_LSHIFT || oldCED->Qualifier & IEQUALIFIER_RSHIFT )
       | 031A  2F48 0028                      MOVE.L      A0,0028(A7)
       | 031E  2F4E 0030                      MOVE.L      A6,0030(A7)
       | 0322  082D 0000 0017                 BTST        #0000,0017(A5)
       | 0328  6608                           BNE.B       0332
       | 032A  082D 0001 0017                 BTST        #0001,0017(A5)
       | 0330  677C                           BEQ.B       03AE
; 118: 	{
; 119: 		if ( SR->numEntries > SR->numDisplay )
       | 0332  2028 0014                      MOVE.L      0014(A0),D0
       | 0336  2228 0018                      MOVE.L      0018(A0),D1
       | 033A  B280                           CMP.L       D0,D1
       | 033C  6F70                           BLE.B       03AE
; 120: 		{
; 121: 			f = ( (oldCED->MouseY - g->TopEdge) * SR->numEntries) / g->Height;
       | 033E  342D 0024                      MOVE.W      0024(A5),D2
       | 0342  48C2                           EXT.L       D2
       | 0344  362A 0006                      MOVE.W      0006(A2),D3
       | 0348  48C3                           EXT.L       D3
       | 034A  9483                           SUB.L       D3,D2
       | 034C  2002                           MOVE.L      D2,D0
       | 034E  4EBA  0000-XX.1                JSR         __CXM33(PC)
       | 0352  322A 000A                      MOVE.W      000A(A2),D1
       | 0356  48C1                           EXT.L       D1
       | 0358  4EBA  0000-XX.1                JSR         __CXD33(PC)
; 122: 			if ( f < 0 )
       | 035C  2F40 0038                      MOVE.L      D0,0038(A7)
       | 0360  6C06                           BGE.B       0368
; 123: 				f = 0;
       | 0362  7200                           MOVEQ       #00,D1
       | 0364  2F41 0038                      MOVE.L      D1,0038(A7)
; 124: 			*top = f;
       | 0368  202F 0038                      MOVE.L      0038(A7),D0
       | 036C  226F 002C                      MOVEA.L     002C(A7),A1
       | 0370  2280                           MOVE.L      D0,(A1)
; 125: 			if ( (*top+SR->numDisplay) > SR->numEntries )
       | 0372  2228 0014                      MOVE.L      0014(A0),D1
       | 0376  D081                           ADD.L       D1,D0
       | 0378  2428 0018                      MOVE.L      0018(A0),D2
       | 037C  B082                           CMP.L       D2,D0
       | 037E  6F06                           BLE.B       0386
; 126: 				*top = SR->numEntries-SR->numDisplay;
       | 0380  2002                           MOVE.L      D2,D0
       | 0382  9081                           SUB.L       D1,D0
       | 0384  2280                           MOVE.L      D0,(A1)
; 127: 			LIBUA_SetPropSlider(SR->window, g, SR->numEntries, SR->numDisplay, *top);
       | 0386  2028 0018                      MOVE.L      0018(A0),D0
       | 038A  2228 0014                      MOVE.L      0014(A0),D1
       | 038E  2411                           MOVE.L      (A1),D2
       | 0390  2068 0004                      MOVEA.L     0004(A0),A0
       | 0394  224A                           MOVEA.L     A2,A1
       | 0396  6100 0CA0                      BSR.W       1038
; 128: 			LIBUA_PrintStandardList(SR, *top, ptrlist);
       | 039A  206F 002C                      MOVEA.L     002C(A7),A0
       | 039E  2210                           MOVE.L      (A0),D1
       | 03A0  206F 0028                      MOVEA.L     0028(A7),A0
       | 03A4  224B                           MOVEA.L     A3,A1
       | 03A6  6100 FC58                      BSR.W       0000
; 129: 			return;
       | 03AA  6000 0110                      BRA.W       04BC
; 130: 		}
; 131: 	}
; 132: 
; 133: 	myTop = *top;
       | 03AE  206F 002C                      MOVEA.L     002C(A7),A0
       | 03B2  2F50 0064                      MOVE.L      (A0),0064(A7)
; 134: 
; 135: 	LIBUA_GetPropSlider(SR->window, g, SR->numEntries, SR->numDisplay, &myTop);
       | 03B6  2F0A                           MOVE.L      A2,-(A7)
       | 03B8  224A                           MOVEA.L     A2,A1
       | 03BA  206F 002C                      MOVEA.L     002C(A7),A0
       | 03BE  2028 0018                      MOVE.L      0018(A0),D0
       | 03C2  2228 0014                      MOVE.L      0014(A0),D1
       | 03C6  2068 0004                      MOVEA.L     0004(A0),A0
       | 03CA  45EF 0068                      LEA         0068(A7),A2
       | 03CE  6100 0A3C                      BSR.W       0E0C
       | 03D2  245F                           MOVEA.L     (A7)+,A2
; 136: 
; 137: 	LIBUA_PrintStandardList(SR, myTop, ptrlist);
       | 03D4  222F 0064                      MOVE.L      0064(A7),D1
       | 03D8  206F 0028                      MOVEA.L     0028(A7),A0
       | 03DC  224B                           MOVEA.L     A3,A1
       | 03DE  6100 FC20                      BSR.W       0000
; 138: 
; 139: 	LIBUA_SwitchMouseMoveOn(SR->window);
       | 03E2  206F 0028                      MOVEA.L     0028(A7),A0
       | 03E6  2068 0004                      MOVEA.L     0004(A0),A0
       | 03EA  6100 09B4                      BSR.W       0DA0
; 140: 
; 141: 	sigMask = 1L << capsport->mp_SigBit;
       | 03EE  7000                           MOVEQ       #00,D0
       | 03F0  206C  0000-XX.2                MOVEA.L     _capsport(A4),A0
       | 03F4  1028 000F                      MOVE.B      000F(A0),D0
       | 03F8  7201                           MOVEQ       #01,D1
       | 03FA  E1A1                           ASL.L       D0,D1
       | 03FC  2C01                           MOVE.L      D1,D6
; 142: 
; 143: 	while(loop)
       | 03FE  4A45                           TST.W       D5
       | 0400  6700 00A6                      BEQ.W       04A8
; 144: 	{
; 145: 		signals = Wait( sigMask );
       | 0404  2006                           MOVE.L      D6,D0
       | 0406  2C6C  0000-XX.2                MOVEA.L     _SysBase(A4),A6
       | 040A  4EAE FEC2                      JSR         FEC2(A6)
       | 040E  2E00                           MOVE.L      D0,D7
; 146: 		if (signals & sigMask)
       | 0410  2007                           MOVE.L      D7,D0
       | 0412  C086                           AND.L       D6,D0
       | 0414  2C6F 0030                      MOVEA.L     0030(A7),A6
       | 0418  6700 0086                      BEQ.W       04A0
; 147: 		{
; 148: 			mouseMoved=FALSE;
       | 041C  426F 0036                      CLR.W       0036(A7)
; 149: 			while(message = (struct IntuiMessage *)GetMsg(capsport))
       | 0420  206C  0000-XX.2                MOVEA.L     _capsport(A4),A0
       | 0424  2C6C  0000-XX.2                MOVEA.L     _SysBase(A4),A6
       | 0428  4EAE FE8C                      JSR         FE8C(A6)
       | 042C  2C6F 0030                      MOVEA.L     0030(A7),A6
       | 0430  2F40 0068                      MOVE.L      D0,0068(A7)
       | 0434  672A                           BEQ.B       0460
; 150: 			{
; 151: 				CED.Class	= message->Class;
       | 0436  2040                           MOVEA.L     D0,A0
       | 0438  2F68 0014 0048                 MOVE.L      0014(A0),0048(A7)
; 152: 				ReplyMsg((struct Message *)message);
       | 043E  2240                           MOVEA.L     D0,A1
       | 0440  2C6C  0000-XX.2                MOVEA.L     _SysBase(A4),A6
       | 0444  4EAE FE86                      JSR         FE86(A6)
; 153: 				if ( CED.Class == IDCMP_MOUSEMOVE )
       | 0448  7010                           MOVEQ       #10,D0
       | 044A  B0AF 0048                      CMP.L       0048(A7),D0
       | 044E  2C6F 0030                      MOVEA.L     0030(A7),A6
       | 0452  6608                           BNE.B       045C
; 154: 					mouseMoved=TRUE;
       | 0454  3F7C 0001 0036                 MOVE.W      #0001,0036(A7)
       | 045A  60C4                           BRA.B       0420
; 155: 				else
; 156: 					loop=FALSE;
       | 045C  7A00                           MOVEQ       #00,D5
; 157: 			}
       | 045E  60C0                           BRA.B       0420
; 158: 			if (mouseMoved)
       | 0460  4A6F 0036                      TST.W       0036(A7)
       | 0464  673A                           BEQ.B       04A0
; 159: 			{
; 160: 				if (g->Flags & GFLG_SELECTED)
       | 0466  082A 0007 000D                 BTST        #0007,000D(A2)
       | 046C  6730                           BEQ.B       049E
; 161: 				{
; 162: 					LIBUA_GetPropSlider(SR->window, g, SR->numEntries, SR->numDisplay, &myTop);
       | 046E  2F0A                           MOVE.L      A2,-(A7)
       | 0470  224A                           MOVEA.L     A2,A1
       | 0472  206F 002C                      MOVEA.L     002C(A7),A0
       | 0476  2028 0018                      MOVE.L      0018(A0),D0
       | 047A  2228 0014                      MOVE.L      0014(A0),D1
       | 047E  2068 0004                      MOVEA.L     0004(A0),A0
       | 0482  45EF 0068                      LEA         0068(A7),A2
       | 0486  6100 0984                      BSR.W       0E0C
       | 048A  245F                           MOVEA.L     (A7)+,A2
; 163: 					LIBUA_PrintStandardList(SR, myTop, ptrlist);
       | 048C  222F 0064                      MOVE.L      0064(A7),D1
       | 0490  206F 0028                      MOVEA.L     0028(A7),A0
       | 0494  224B                           MOVEA.L     A3,A1
       | 0496  6100 FB68                      BSR.W       0000
; 164: 					loop=TRUE;
       | 049A  7A01                           MOVEQ       #01,D5
       | 049C  6002                           BRA.B       04A0
; 165:  				}
; 166: 				else
; 167: 					loop=FALSE;
       | 049E  7A00                           MOVEQ       #00,D5
       | 04A0  2C6F 0030                      MOVEA.L     0030(A7),A6
; 168: 			}
; 169: 		}
; 170: 	}
       | 04A4  6000 FF58                      BRA.W       03FE
; 171: 
; 172: 	LIBUA_SwitchMouseMoveOff(SR->window);
       | 04A8  206F 0028                      MOVEA.L     0028(A7),A0
       | 04AC  2068 0004                      MOVEA.L     0004(A0),A0
       | 04B0  6100 0924                      BSR.W       0DD6
; 173: 
; 174: 	*top = myTop;
       | 04B4  206F 002C                      MOVEA.L     002C(A7),A0
       | 04B8  20AF 0064                      MOVE.L      0064(A7),(A0)
; 175: }
       | 04BC  4CDF 7CEC                      MOVEM.L     (A7)+,D2-D3/D5-D7/A2-A6
       | 04C0  DEFC 0044                      ADDA.W      #0044,A7
       | 04C4  4E75                           RTS
; 176: 
; 177: /******** SelectStandardListLine() ********/
; 178: /*
; 179:  * GR is the whole display box
; 180:  *
; 181:  * returns -1 clicked outside box or lower than lowest line of text
; 182:  *
; 183:  * if !multiple, list may be NULL
; 184:  *
; 185:  */
; 186: 
; 187: int __saveds __asm LIBUA_SelectStandardListLine(register __a0 struct ScrollRecord *SR,
; 188: 																								register __d0 int top,
; 189: 																								register __d1 BOOL multiple,
; 190: 																								register __a1 struct EventData *CED,
; 191: 																								register __d2 BOOL deselect,
; 192: 																								register __d3 BOOL select )
; 193: {
       | 04C6  9EFC 0034                      SUBA.W      #0034,A7
       | 04CA  48E7 3F3E                      MOVEM.L     D2-D7/A2-A6,-(A7)
       | 04CE  2803                           MOVE.L      D3,D4
       | 04D0  2A02                           MOVE.L      D2,D5
       | 04D2  2C01                           MOVE.L      D1,D6
       | 04D4  2E00                           MOVE.L      D0,D7
       | 04D6  2649                           MOVEA.L     A1,A3
       | 04D8  2A48                           MOVEA.L     A0,A5
       | 04DA  49EE  0000-XX.2                LEA         _LinkerDB(A6),A4
; 194: int lineHeight, line, i, lace, didLine=-1;
       | 04DE  70FF                           MOVEQ       #FF,D0
; 195: UBYTE old;
; 196: BOOL rectfill;
; 197: 
; 198: 	lineHeight = (SR->GR->y2 - SR->GR->y1) / SR->numDisplay;
       | 04E0  2055                           MOVEA.L     (A5),A0
       | 04E2  3228 0006                      MOVE.W      0006(A0),D1
       | 04E6  48C1                           EXT.L       D1
       | 04E8  3428 0002                      MOVE.W      0002(A0),D2
       | 04EC  48C2                           EXT.L       D2
       | 04EE  9282                           SUB.L       D2,D1
       | 04F0  2F40 004C                      MOVE.L      D0,004C(A7)
       | 04F4  2001                           MOVE.L      D1,D0
       | 04F6  222D 0014                      MOVE.L      0014(A5),D1
       | 04FA  4EBA  0000-XX.1                JSR         __CXD33(PC)
; 199: 
; 200: 	line = (CED->MouseY - SR->GR->y1) / lineHeight;
       | 04FE  322B 0024                      MOVE.W      0024(A3),D1
       | 0502  48C1                           EXT.L       D1
       | 0504  3428 0002                      MOVE.W      0002(A0),D2
       | 0508  48C2                           EXT.L       D2
       | 050A  9282                           SUB.L       D2,D1
       | 050C  2F40 005C                      MOVE.L      D0,005C(A7)
       | 0510  2001                           MOVE.L      D1,D0
       | 0512  222F 005C                      MOVE.L      005C(A7),D1
       | 0516  4EBA  0000-XX.1                JSR         __CXD33(PC)
; 201: 	if (SR->numEntries < SR->numDisplay)
       | 051A  2F40 0058                      MOVE.L      D0,0058(A7)
       | 051E  48EF 4000 0044                 MOVEM.L     A6,0044(A7)
       | 0524  222D 0014                      MOVE.L      0014(A5),D1
       | 0528  242D 0018                      MOVE.L      0018(A5),D2
       | 052C  B481                           CMP.L       D1,D2
       | 052E  6C10                           BGE.B       0540
; 202: 	{
; 203: 		if ( line-1 >= (SR->numEntries-1) )
       | 0530  5382                           SUBQ.L      #1,D2
       | 0532  2600                           MOVE.L      D0,D3
       | 0534  5383                           SUBQ.L      #1,D3
       | 0536  B682                           CMP.L       D2,D3
       | 0538  6D14                           BLT.B       054E
; 204: 			return(-1);
       | 053A  70FF                           MOVEQ       #FF,D0
       | 053C  6000 043E                      BRA.W       097C
; 205: 	}
; 206: 	else if (line<0 || line>=SR->numDisplay)
       | 0540  4A80                           TST.L       D0
       | 0542  6B04                           BMI.B       0548
       | 0544  B081                           CMP.L       D1,D0
       | 0546  6D06                           BLT.B       054E
; 207: 		return(-1);
       | 0548  70FF                           MOVEQ       #FF,D0
       | 054A  6000 0430                      BRA.W       097C
; 208: 
; 209: 	SafeSetWriteMask(SR->window->RPort, 0x7);
       | 054E  206C  0000-XX.2                MOVEA.L     _GfxBase(A4),A0
       | 0552  3028 0014                      MOVE.W      0014(A0),D0
       | 0556  7227                           MOVEQ       #27,D1
       | 0558  B041                           CMP.W       D1,D0
       | 055A  6410                           BCC.B       056C
       | 055C  226D 0004                      MOVEA.L     0004(A5),A1
       | 0560  2469 0032                      MOVEA.L     0032(A1),A2
       | 0564  157C 0007 0018                 MOVE.B      #07,0018(A2)
       | 056A  6010                           BRA.B       057C
       | 056C  226D 0004                      MOVEA.L     0004(A5),A1
       | 0570  2C48                           MOVEA.L     A0,A6
       | 0572  2069 0032                      MOVEA.L     0032(A1),A0
       | 0576  7007                           MOVEQ       #07,D0
       | 0578  4EAE FC28                      JSR         FC28(A6)
; 210: 	SetDrMd(SR->window->RPort, JAM2|COMPLEMENT);
       | 057C  206D 0004                      MOVEA.L     0004(A5),A0
       | 0580  2268 0032                      MOVEA.L     0032(A0),A1
       | 0584  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 0588  7003                           MOVEQ       #03,D0
       | 058A  4EAE FE9E                      JSR         FE9E(A6)
; 211: 
; 212: 	/**** I know, this breaks the rule that this routine should be	****/
; 213: 	/**** a general purpose one but no one else uses DIR_PRECODE		****/
; 214: 	/**** and it save a lot of code elsewhere. Why is this? -->			****/
; 215: 	/**** When selecting multiple files, you can select more than		****/
; 216: 	/**** one file but only one dir.																****/
; 217: 
; 218: 	/**** ONCE AGAIN: USE MULTIPLE ONLY WITH DIRS !!!!!!!!!					****/
; 219: 
; 220: 	if (SR->window->WScreen->ViewPort.Modes & LACE)
       | 058E  206D 0004                      MOVEA.L     0004(A5),A0
       | 0592  2268 002E                      MOVEA.L     002E(A0),A1
       | 0596  0829 0002 004D                 BTST        #0002,004D(A1)
       | 059C  2C6F 0044                      MOVEA.L     0044(A7),A6
       | 05A0  6708                           BEQ.B       05AA
; 221: 		lace=1;
       | 05A2  7001                           MOVEQ       #01,D0
       | 05A4  2F40 0050                      MOVE.L      D0,0050(A7)
       | 05A8  6004                           BRA.B       05AE
; 222: 	else
; 223: 		lace=0;
       | 05AA  42AF 0050                      CLR.L       0050(A7)
; 224: 
; 225: 	if (multiple && SR->list)
       | 05AE  4A46                           TST.W       D6
       | 05B0  6700 00E6                      BEQ.W       0698
       | 05B4  4AAD 0008                      TST.L       0008(A5)
       | 05B8  6700 00DE                      BEQ.W       0698
; 226: 	{
; 227: 		/**** deselect all items if a dir gets chosen ****/
; 228: 
; 229: 		if ( *(SR->list+((line+top)*SIZE_FILENAME)) == DIR_PRECODE )
       | 05BC  202F 0058                      MOVE.L      0058(A7),D0
       | 05C0  D087                           ADD.L       D7,D0
       | 05C2  2200                           MOVE.L      D0,D1
       | 05C4  E581                           ASL.L       #2,D1
       | 05C6  9280                           SUB.L       D0,D1
       | 05C8  E781                           ASL.L       #3,D1
       | 05CA  D280                           ADD.L       D0,D1
       | 05CC  D281                           ADD.L       D1,D1
       | 05CE  206D 0008                      MOVEA.L     0008(A5),A0
       | 05D2  D1C1                           ADDA.L      D1,A0
       | 05D4  7089                           MOVEQ       #89,D0
       | 05D6  B010                           CMP.B       (A0),D0
       | 05D8  6602                           BNE.B       05DC
; 230: 			multiple = FALSE;
       | 05DA  7C00                           MOVEQ       #00,D6
; 231: 
; 232: 		/**** deselect selected dir if a file gets chosen ****/
; 233: 
; 234: 		for(i=0; i<SR->numEntries; i++)
       | 05DC  42AF 0054                      CLR.L       0054(A7)
       | 05E0  202F 0054                      MOVE.L      0054(A7),D0
       | 05E4  B0AD 0018                      CMP.L       0018(A5),D0
       | 05E8  6C00 00AE                      BGE.W       0698
; 235: 		{
; 236: 			if ( 	(*(SR->selectionList+i) == 1) &&
       | 05EC  206D 000C                      MOVEA.L     000C(A5),A0
       | 05F0  2248                           MOVEA.L     A0,A1
       | 05F2  D3C0                           ADDA.L      D0,A1
       | 05F4  7201                           MOVEQ       #01,D1
       | 05F6  B211                           CMP.B       (A1),D1
       | 05F8  6600 0092                      BNE.W       068C
; 237: 						( *(SR->list+i*SIZE_FILENAME) == DIR_PRECODE) )
       | 05FC  2200                           MOVE.L      D0,D1
       | 05FE  E581                           ASL.L       #2,D1
       | 0600  9280                           SUB.L       D0,D1
       | 0602  E781                           ASL.L       #3,D1
       | 0604  D280                           ADD.L       D0,D1
       | 0606  D281                           ADD.L       D1,D1
       | 0608  226D 0008                      MOVEA.L     0008(A5),A1
       | 060C  D3C1                           ADDA.L      D1,A1
       | 060E  7289                           MOVEQ       #89,D1
       | 0610  B211                           CMP.B       (A1),D1
       | 0612  6678                           BNE.B       068C
; 238: 			{
; 239: 				*(SR->selectionList+i) = 0;
       | 0614  D1C0                           ADDA.L      D0,A0
       | 0616  4210                           CLR.B       (A0)
; 240: 				/**** if selected dir is visible, remove it right away ****/
; 241: 				if ( (i >= top) && (i < (top+SR->numDisplay)) )
       | 0618  B087                           CMP.L       D7,D0
       | 061A  6D6A                           BLT.B       0686
       | 061C  222D 0014                      MOVE.L      0014(A5),D1
       | 0620  D287                           ADD.L       D7,D1
       | 0622  B081                           CMP.L       D1,D0
       | 0624  6C60                           BGE.B       0686
; 242: 				{
; 243: 					RectFill(	SR->window->RPort,
       | 0626  206D 0004                      MOVEA.L     0004(A5),A0
       | 062A  2255                           MOVEA.L     (A5),A1
       | 062C  3211                           MOVE.W      (A1),D1
       | 062E  48C1                           EXT.L       D1
       | 0630  5481                           ADDQ.L      #2,D1
       | 0632  3429 0002                      MOVE.W      0002(A1),D2
       | 0636  48C2                           EXT.L       D2
       | 0638  9087                           SUB.L       D7,D0
       | 063A  2F41 0030                      MOVE.L      D1,0030(A7)
       | 063E  222F 005C                      MOVE.L      005C(A7),D1
       | 0642  4EBA  0000-XX.1                JSR         __CXM33(PC)
       | 0646  D480                           ADD.L       D0,D2
       | 0648  5482                           ADDQ.L      #2,D2
       | 064A  3229 0004                      MOVE.W      0004(A1),D1
       | 064E  48C1                           EXT.L       D1
       | 0650  5581                           SUBQ.L      #2,D1
       | 0652  3629 0002                      MOVE.W      0002(A1),D3
       | 0656  48C3                           EXT.L       D3
       | 0658  D6AF 0050                      ADD.L       0050(A7),D3
       | 065C  2268 0032                      MOVEA.L     0032(A0),A1
       | 0660  2F41 0040                      MOVE.L      D1,0040(A7)
       | 0664  7200                           MOVEQ       #00,D1
       | 0666  3229 003E                      MOVE.W      003E(A1),D1
       | 066A  D681                           ADD.L       D1,D3
       | 066C  D680                           ADD.L       D0,D3
       | 066E  5683                           ADDQ.L      #3,D3
; 244: 										SR->GR->x1+2,
; 245: 										SR->GR->y1+2 + lineHeight*(i-top),
; 246: 										SR->GR->x2-2,
; 247: 										SR->GR->y1+3 + lace+SR->window->RPort->TxBaseline + lineHeight*(i-top));
       | 0670  2202                           MOVE.L      D2,D1
       | 0672  2268 0032                      MOVEA.L     0032(A0),A1
       | 0676  202F 0030                      MOVE.L      0030(A7),D0
       | 067A  242F 0040                      MOVE.L      0040(A7),D2
       | 067E  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 0682  4EAE FECE                      JSR         FECE(A6)
       | 0686  2C6F 0044                      MOVEA.L     0044(A7),A6
; 248: 				}
; 249: 				break;	/* only one dir can be involved */
       | 068A  600C                           BRA.B       0698
       | 068C  2C6F 0044                      MOVEA.L     0044(A7),A6
; 250: 			}
; 251: 		}
       | 0690  52AF 0054                      ADDQ.L      #1,0054(A7)
       | 0694  6000 FF4A                      BRA.W       05E0
; 252: 	}
; 253: 
; 254: 	if (!multiple)
       | 0698  4A46                           TST.W       D6
       | 069A  2C6F 0044                      MOVEA.L     0044(A7),A6
       | 069E  6600 00A8                      BNE.W       0748
; 255: 	{
; 256: 		for(i=0; i<SR->numEntries; i++)
       | 06A2  42AF 0054                      CLR.L       0054(A7)
       | 06A6  202F 0054                      MOVE.L      0054(A7),D0
       | 06AA  B0AD 0018                      CMP.L       0018(A5),D0
       | 06AE  6C00 0098                      BGE.W       0748
; 257: 		{
; 258: 			if ( SR->selectionList && *(SR->selectionList+i)==1 )
       | 06B2  222D 000C                      MOVE.L      000C(A5),D1
       | 06B6  6700 0084                      BEQ.W       073C
       | 06BA  2041                           MOVEA.L     D1,A0
       | 06BC  2248                           MOVEA.L     A0,A1
       | 06BE  D3C0                           ADDA.L      D0,A1
       | 06C0  7401                           MOVEQ       #01,D2
       | 06C2  B411                           CMP.B       (A1),D2
       | 06C4  6676                           BNE.B       073C
; 259: 			{
; 260: 				didLine=i;
; 261: 				*(SR->selectionList+i) = 0;
       | 06C6  D1C0                           ADDA.L      D0,A0
       | 06C8  4210                           CLR.B       (A0)
; 262: 				if ( (i >= top) && (i < (top+SR->numDisplay)) )
       | 06CA  2F40 004C                      MOVE.L      D0,004C(A7)
       | 06CE  B087                           CMP.L       D7,D0
       | 06D0  6D6A                           BLT.B       073C
       | 06D2  222D 0014                      MOVE.L      0014(A5),D1
       | 06D6  D287                           ADD.L       D7,D1
       | 06D8  B081                           CMP.L       D1,D0
       | 06DA  6C60                           BGE.B       073C
; 263: 				{
; 264: 					RectFill(	SR->window->RPort,
       | 06DC  206D 0004                      MOVEA.L     0004(A5),A0
       | 06E0  2255                           MOVEA.L     (A5),A1
       | 06E2  3211                           MOVE.W      (A1),D1
       | 06E4  48C1                           EXT.L       D1
       | 06E6  5481                           ADDQ.L      #2,D1
       | 06E8  3429 0002                      MOVE.W      0002(A1),D2
       | 06EC  48C2                           EXT.L       D2
       | 06EE  9087                           SUB.L       D7,D0
       | 06F0  2F41 0030                      MOVE.L      D1,0030(A7)
       | 06F4  222F 005C                      MOVE.L      005C(A7),D1
       | 06F8  4EBA  0000-XX.1                JSR         __CXM33(PC)
       | 06FC  D480                           ADD.L       D0,D2
       | 06FE  5482                           ADDQ.L      #2,D2
       | 0700  3229 0004                      MOVE.W      0004(A1),D1
       | 0704  48C1                           EXT.L       D1
       | 0706  5581                           SUBQ.L      #2,D1
       | 0708  3629 0002                      MOVE.W      0002(A1),D3
       | 070C  48C3                           EXT.L       D3
       | 070E  D6AF 0050                      ADD.L       0050(A7),D3
       | 0712  2268 0032                      MOVEA.L     0032(A0),A1
       | 0716  2F41 0040                      MOVE.L      D1,0040(A7)
       | 071A  7200                           MOVEQ       #00,D1
       | 071C  3229 003E                      MOVE.W      003E(A1),D1
       | 0720  D681                           ADD.L       D1,D3
       | 0722  D680                           ADD.L       D0,D3
       | 0724  5683                           ADDQ.L      #3,D3
; 265: 										SR->GR->x1+2,
; 266: 										SR->GR->y1+2+lineHeight*(i-top),
; 267: 										SR->GR->x2-2,
; 268: 										SR->GR->y1+3+lace+SR->window->RPort->TxBaseline+lineHeight*(i-top));
       | 0726  2202                           MOVE.L      D2,D1
       | 0728  2268 0032                      MOVEA.L     0032(A0),A1
       | 072C  202F 0030                      MOVE.L      0030(A7),D0
       | 0730  242F 0040                      MOVE.L      0040(A7),D2
       | 0734  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 0738  4EAE FECE                      JSR         FECE(A6)
       | 073C  2C6F 0044                      MOVEA.L     0044(A7),A6
; 269: 				}
; 270: 			}
; 271: 		}
       | 0740  52AF 0054                      ADDQ.L      #1,0054(A7)
       | 0744  6000 FF60                      BRA.W       06A6
; 272: 	}
; 273: 
; 274: 	if ( SR->selectionList!=NULL )
       | 0748  202D 000C                      MOVE.L      000C(A5),D0
       | 074C  2C6F 0044                      MOVEA.L     0044(A7),A6
       | 0750  6710                           BEQ.B       0762
; 275: 		old = *(SR->selectionList+top+line);
       | 0752  2040                           MOVEA.L     D0,A0
       | 0754  2248                           MOVEA.L     A0,A1
       | 0756  D3C7                           ADDA.L      D7,A1
       | 0758  222F 0058                      MOVE.L      0058(A7),D1
       | 075C  D3C1                           ADDA.L      D1,A1
       | 075E  1F51 0049                      MOVE.B      (A1),0049(A7)
; 276: 
; 277: 	if ( select && deselect )
       | 0762  4A44                           TST.W       D4
       | 0764  6700 00D0                      BEQ.W       0836
       | 0768  4A45                           TST.W       D5
       | 076A  6700 00CA                      BEQ.W       0836
; 278: 	{
; 279: 		// if didLine != -1 -> a selected line has been deselected
; 280: 		// don't select the same line again, any other is fine.
; 281: 
; 282: 		if ( SR->selectionList && didLine!=(top+line) )
       | 076E  4A80                           TST.L       D0
       | 0770  6778                           BEQ.B       07EA
       | 0772  222F 0058                      MOVE.L      0058(A7),D1
       | 0776  2401                           MOVE.L      D1,D2
       | 0778  D487                           ADD.L       D7,D2
       | 077A  262F 004C                      MOVE.L      004C(A7),D3
       | 077E  B682                           CMP.L       D2,D3
       | 0780  6768                           BEQ.B       07EA
; 283: 		{
; 284: 			*(SR->selectionList+top+line) = 1;
       | 0782  2040                           MOVEA.L     D0,A0
       | 0784  D1C7                           ADDA.L      D7,A0
       | 0786  D1C1                           ADDA.L      D1,A0
       | 0788  10BC 0001                      MOVE.B      #01,(A0)
; 285: 
; 286: 			RectFill(	SR->window->RPort,
       | 078C  206D 0004                      MOVEA.L     0004(A5),A0
       | 0790  2255                           MOVEA.L     (A5),A1
       | 0792  3011                           MOVE.W      (A1),D0
       | 0794  48C0                           EXT.L       D0
       | 0796  5480                           ADDQ.L      #2,D0
       | 0798  3429 0002                      MOVE.W      0002(A1),D2
       | 079C  48C2                           EXT.L       D2
       | 079E  2F40 0030                      MOVE.L      D0,0030(A7)
       | 07A2  202F 005C                      MOVE.L      005C(A7),D0
       | 07A6  4EBA  0000-XX.1                JSR         __CXM33(PC)
       | 07AA  D480                           ADD.L       D0,D2
       | 07AC  5482                           ADDQ.L      #2,D2
       | 07AE  3229 0004                      MOVE.W      0004(A1),D1
       | 07B2  48C1                           EXT.L       D1
       | 07B4  5581                           SUBQ.L      #2,D1
       | 07B6  3629 0002                      MOVE.W      0002(A1),D3
       | 07BA  48C3                           EXT.L       D3
       | 07BC  D6AF 0050                      ADD.L       0050(A7),D3
       | 07C0  2268 0032                      MOVEA.L     0032(A0),A1
       | 07C4  2F41 0040                      MOVE.L      D1,0040(A7)
       | 07C8  7200                           MOVEQ       #00,D1
       | 07CA  3229 003E                      MOVE.W      003E(A1),D1
       | 07CE  D681                           ADD.L       D1,D3
       | 07D0  D680                           ADD.L       D0,D3
       | 07D2  5683                           ADDQ.L      #3,D3
; 287: 								SR->GR->x1+2,
; 288: 								SR->GR->y1+2+lineHeight*line,
; 289: 								SR->GR->x2-2,
; 290: 								SR->GR->y1+3+lace+SR->window->RPort->TxBaseline+lineHeight*line);
       | 07D4  2202                           MOVE.L      D2,D1
       | 07D6  2268 0032                      MOVEA.L     0032(A0),A1
       | 07DA  202F 0030                      MOVE.L      0030(A7),D0
       | 07DE  242F 0040                      MOVE.L      0040(A7),D2
       | 07E2  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 07E6  4EAE FECE                      JSR         FECE(A6)
; 291: 		}
; 292: 		SetDrMd(SR->window->RPort, JAM1);
       | 07EA  206D 0004                      MOVEA.L     0004(A5),A0
       | 07EE  2268 0032                      MOVEA.L     0032(A0),A1
       | 07F2  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 07F6  7000                           MOVEQ       #00,D0
       | 07F8  4EAE FE9E                      JSR         FE9E(A6)
; 293: 		SafeSetWriteMask(SR->window->RPort, 0xff);
       | 07FC  302E 0014                      MOVE.W      0014(A6),D0
       | 0800  7227                           MOVEQ       #27,D1
       | 0802  B041                           CMP.W       D1,D0
       | 0804  2C6F 0044                      MOVEA.L     0044(A7),A6
       | 0808  6410                           BCC.B       081A
       | 080A  206D 0004                      MOVEA.L     0004(A5),A0
       | 080E  2268 0032                      MOVEA.L     0032(A0),A1
       | 0812  137C 00FF 0018                 MOVE.B      #FF,0018(A1)
       | 0818  6014                           BRA.B       082E
       | 081A  206D 0004                      MOVEA.L     0004(A5),A0
       | 081E  2068 0032                      MOVEA.L     0032(A0),A0
       | 0822  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 0826  7000                           MOVEQ       #00,D0
       | 0828  4600                           NOT.B       D0
       | 082A  4EAE FC28                      JSR         FC28(A6)
; 294: 		return(line);
       | 082E  202F 0058                      MOVE.L      0058(A7),D0
       | 0832  6000 0148                      BRA.W       097C
; 295: 	}
; 296: 
; 297: 	/**** sometimes you can only select, sometimes only deselect ****/
; 298: 
; 299: 	rectfill = FALSE;
       | 0836  426F 004A                      CLR.W       004A(A7)
; 300: 
; 301: 	if ( SR->selectionList!=NULL )
       | 083A  202D 000C                      MOVE.L      000C(A5),D0
       | 083E  2C6F 0044                      MOVEA.L     0044(A7),A6
       | 0842  677C                           BEQ.B       08C0
; 302: 	{
; 303: 		if ( select )		// you may only select
       | 0844  4A44                           TST.W       D4
       | 0846  6720                           BEQ.B       0868
; 304: 		{
; 305: 			if (old==0)		// is currently NOT selected
       | 0848  122F 0049                      MOVE.B      0049(A7),D1
       | 084C  661A                           BNE.B       0868
; 306: 			{
; 307: 				*(SR->selectionList+top+line) = 1;
       | 084E  2040                           MOVEA.L     D0,A0
       | 0850  2248                           MOVEA.L     A0,A1
       | 0852  D3C7                           ADDA.L      D7,A1
       | 0854  242F 0058                      MOVE.L      0058(A7),D2
       | 0858  D3C2                           ADDA.L      D2,A1
       | 085A  7601                           MOVEQ       #01,D3
       | 085C  1283                           MOVE.B      D3,(A1)
; 308: 				if ( old != *(SR->selectionList+top+line) )
       | 085E  B601                           CMP.B       D1,D3
       | 0860  6706                           BEQ.B       0868
; 309: 					rectfill = TRUE;
       | 0862  7001                           MOVEQ       #01,D0
       | 0864  3F40 004A                      MOVE.W      D0,004A(A7)
; 310: 			}
; 311: 		}
; 312: 
; 313: 		if ( deselect )	// you may only deselect
       | 0868  4A45                           TST.W       D5
       | 086A  6726                           BEQ.B       0892
; 314: 		{
; 315: 			if (old==1)		// is currently selected
       | 086C  102F 0049                      MOVE.B      0049(A7),D0
       | 0870  7201                           MOVEQ       #01,D1
       | 0872  B001                           CMP.B       D1,D0
       | 0874  661C                           BNE.B       0892
; 316: 			{
; 317: 				*(SR->selectionList+top+line) = 0;
       | 0876  206D 000C                      MOVEA.L     000C(A5),A0
       | 087A  2248                           MOVEA.L     A0,A1
       | 087C  D3C7                           ADDA.L      D7,A1
       | 087E  242F 0058                      MOVE.L      0058(A7),D2
       | 0882  D3C2                           ADDA.L      D2,A1
       | 0884  7600                           MOVEQ       #00,D3
       | 0886  1283                           MOVE.B      D3,(A1)
; 318: 				if ( old != *(SR->selectionList+top+line) )
       | 0888  B003                           CMP.B       D3,D0
       | 088A  6706                           BEQ.B       0892
; 319: 					rectfill = TRUE;
       | 088C  7001                           MOVEQ       #01,D0
       | 088E  3F40 004A                      MOVE.W      D0,004A(A7)
; 320: 			}
; 321: 		}
; 322: 
; 323: 		if ( !select && !deselect )
       | 0892  4A44                           TST.W       D4
       | 0894  6630                           BNE.B       08C6
       | 0896  4A45                           TST.W       D5
       | 0898  662C                           BNE.B       08C6
; 324: 		{
; 325: 			if ( *(SR->selectionList+top+line) == 1 )
       | 089A  206D 000C                      MOVEA.L     000C(A5),A0
       | 089E  2248                           MOVEA.L     A0,A1
       | 08A0  D3C7                           ADDA.L      D7,A1
       | 08A2  202F 0058                      MOVE.L      0058(A7),D0
       | 08A6  D3C0                           ADDA.L      D0,A1
       | 08A8  7201                           MOVEQ       #01,D1
       | 08AA  B211                           CMP.B       (A1),D1
       | 08AC  6604                           BNE.B       08B2
; 326: 				*(SR->selectionList+top+line) = 0;
       | 08AE  4211                           CLR.B       (A1)
       | 08B0  6006                           BRA.B       08B8
; 327: 			else
; 328: 				*(SR->selectionList+top+line) = 1;
       | 08B2  D1C7                           ADDA.L      D7,A0
       | 08B4  D1C0                           ADDA.L      D0,A0
       | 08B6  1081                           MOVE.B      D1,(A0)
; 329: 			rectfill = TRUE;
       | 08B8  7201                           MOVEQ       #01,D1
       | 08BA  3F41 004A                      MOVE.W      D1,004A(A7)
       | 08BE  6006                           BRA.B       08C6
; 330: 		}
; 331: 	}
; 332: 	else
; 333: 	{
; 334: 		rectfill=TRUE;
       | 08C0  7001                           MOVEQ       #01,D0
       | 08C2  3F40 004A                      MOVE.W      D0,004A(A7)
; 335: 	}
; 336: 
; 337: 	if ( rectfill )
       | 08C6  4A6F 004A                      TST.W       004A(A7)
       | 08CA  6768                           BEQ.B       0934
; 338: 	{
; 339: 		RectFill(	SR->window->RPort,
       | 08CC  206D 0004                      MOVEA.L     0004(A5),A0
       | 08D0  2255                           MOVEA.L     (A5),A1
       | 08D2  3011                           MOVE.W      (A1),D0
       | 08D4  48C0                           EXT.L       D0
       | 08D6  5480                           ADDQ.L      #2,D0
       | 08D8  3229 0002                      MOVE.W      0002(A1),D1
       | 08DC  48C1                           EXT.L       D1
       | 08DE  2F40 0030                      MOVE.L      D0,0030(A7)
       | 08E2  202F 005C                      MOVE.L      005C(A7),D0
       | 08E6  2F41 0034                      MOVE.L      D1,0034(A7)
       | 08EA  222F 0058                      MOVE.L      0058(A7),D1
       | 08EE  4EBA  0000-XX.1                JSR         __CXM33(PC)
       | 08F2  222F 0034                      MOVE.L      0034(A7),D1
       | 08F6  D280                           ADD.L       D0,D1
       | 08F8  5481                           ADDQ.L      #2,D1
       | 08FA  3429 0004                      MOVE.W      0004(A1),D2
       | 08FE  48C2                           EXT.L       D2
       | 0900  5582                           SUBQ.L      #2,D2
       | 0902  3629 0002                      MOVE.W      0002(A1),D3
       | 0906  48C3                           EXT.L       D3
       | 0908  D6AF 0050                      ADD.L       0050(A7),D3
       | 090C  2268 0032                      MOVEA.L     0032(A0),A1
       | 0910  2F42 0040                      MOVE.L      D2,0040(A7)
       | 0914  7400                           MOVEQ       #00,D2
       | 0916  3429 003E                      MOVE.W      003E(A1),D2
       | 091A  D682                           ADD.L       D2,D3
       | 091C  D680                           ADD.L       D0,D3
       | 091E  5683                           ADDQ.L      #3,D3
; 340: 							SR->GR->x1+2,
; 341: 							SR->GR->y1+2+lineHeight*line,
; 342: 							SR->GR->x2-2,
; 343: 							SR->GR->y1+3+lace+SR->window->RPort->TxBaseline+lineHeight*line);
       | 0920  2268 0032                      MOVEA.L     0032(A0),A1
       | 0924  202F 0030                      MOVE.L      0030(A7),D0
       | 0928  242F 0040                      MOVE.L      0040(A7),D2
       | 092C  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 0930  4EAE FECE                      JSR         FECE(A6)
; 344: 	}
; 345: 
; 346: 	SetDrMd(SR->window->RPort, JAM1);
       | 0934  206D 0004                      MOVEA.L     0004(A5),A0
       | 0938  2268 0032                      MOVEA.L     0032(A0),A1
       | 093C  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 0940  7000                           MOVEQ       #00,D0
       | 0942  4EAE FE9E                      JSR         FE9E(A6)
; 347: 	SafeSetWriteMask(SR->window->RPort, 0xff);
       | 0946  302E 0014                      MOVE.W      0014(A6),D0
       | 094A  7227                           MOVEQ       #27,D1
       | 094C  B041                           CMP.W       D1,D0
       | 094E  2C6F 0044                      MOVEA.L     0044(A7),A6
       | 0952  6410                           BCC.B       0964
       | 0954  206D 0004                      MOVEA.L     0004(A5),A0
       | 0958  2268 0032                      MOVEA.L     0032(A0),A1
       | 095C  137C 00FF 0018                 MOVE.B      #FF,0018(A1)
       | 0962  6014                           BRA.B       0978
       | 0964  206D 0004                      MOVEA.L     0004(A5),A0
       | 0968  2068 0032                      MOVEA.L     0032(A0),A0
       | 096C  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 0970  7000                           MOVEQ       #00,D0
       | 0972  4600                           NOT.B       D0
       | 0974  4EAE FC28                      JSR         FC28(A6)
; 348: 
; 349: 	return(line);
       | 0978  202F 0058                      MOVE.L      0058(A7),D0
; 350: }
       | 097C  4CDF 7CFC                      MOVEM.L     (A7)+,D2-D7/A2-A6
       | 0980  DEFC 0034                      ADDA.W      #0034,A7
       | 0984  4E75                           RTS
; 351: 
; 352: /******** ShortenString() ********/
; 353: 
; 354: void __saveds __asm LIBUA_ShortenString(register __a0 struct RastPort *rp,
; 355: 																				register __a1 STRPTR str,
; 356: 																				register __d0 int numPixels)
; 357: {
       | 0986  594F                           SUBQ.W      #4,A7
       | 0988  48E7 031E                      MOVEM.L     D6-D7/A3-A6,-(A7)
       | 098C  2E00                           MOVE.L      D0,D7
       | 098E  2649                           MOVEA.L     A1,A3
       | 0990  2A48                           MOVEA.L     A0,A5
       | 0992  49EE  0000-XX.2                LEA         _LinkerDB(A6),A4
; 358: int i;
; 359: 
; 360: 	i=strlen(str);
       | 0996  204B                           MOVEA.L     A3,A0
       | 0998  4A18                           TST.B       (A0)+
       | 099A  66FC                           BNE.B       0998
       | 099C  5388                           SUBQ.L      #1,A0
       | 099E  91CB                           SUBA.L      A3,A0
       | 09A0  2C08                           MOVE.L      A0,D6
; 361: 	if (i==0)
       | 09A2  2F4E 0018                      MOVE.L      A6,0018(A7)
       | 09A6  4A86                           TST.L       D6
       | 09A8  660C                           BNE.B       09B6
; 362: 	{
; 363: 		strcpy(str, "Untitled");	// SAS function, survived strcpy
       | 09AA  41EC  0004-01.2                LEA         01.00000004(A4),A0
       | 09AE  224B                           MOVEA.L     A3,A1
       | 09B0  12D8                           MOVE.B      (A0)+,(A1)+
       | 09B2  66FC                           BNE.B       09B0
; 364: 		return;
       | 09B4  6026                           BRA.B       09DC
; 365: 	}
; 366: 	while(i!=0 && TextLength(rp, str, i-1) > numPixels)
       | 09B6  4A86                           TST.L       D6
       | 09B8  6722                           BEQ.B       09DC
       | 09BA  2006                           MOVE.L      D6,D0
       | 09BC  5380                           SUBQ.L      #1,D0
       | 09BE  224D                           MOVEA.L     A5,A1
       | 09C0  204B                           MOVEA.L     A3,A0
       | 09C2  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 09C6  4EAE FFCA                      JSR         FFCA(A6)
       | 09CA  48C0                           EXT.L       D0
       | 09CC  B087                           CMP.L       D7,D0
       | 09CE  2C6F 0018                      MOVEA.L     0018(A7),A6
       | 09D2  6F08                           BLE.B       09DC
; 367: 	{
; 368: 		*(str+i-1) = '\0';
       | 09D4  4233 68FF                      CLR.B       FF(A3,D6.L)
; 369: 		i--;
       | 09D8  5386                           SUBQ.L      #1,D6
; 370: 	}
       | 09DA  60DA                           BRA.B       09B6
; 371: }
       | 09DC  4CDF 78C0                      MOVEM.L     (A7)+,D6-D7/A3-A6
       | 09E0  584F                           ADDQ.W      #4,A7
       | 09E2  4E75                           RTS
; 372: 
; 373: /******** ShortenStringFront() ********/
; 374: 
; 375: void __saveds __asm LIBUA_ShortenStringFront(	register __a0 struct RastPort *rp,
; 376: 																							register __a1 STRPTR str,
; 377: 																							register __d0 int numPixels)
; 378: {
       | 09E4  594F                           SUBQ.W      #4,A7
       | 09E6  48E7 031E                      MOVEM.L     D6-D7/A3-A6,-(A7)
       | 09EA  2E00                           MOVE.L      D0,D7
       | 09EC  2649                           MOVEA.L     A1,A3
       | 09EE  2A48                           MOVEA.L     A0,A5
       | 09F0  49EE  0000-XX.2                LEA         _LinkerDB(A6),A4
; 379: int i;
; 380: 
; 381: 	i=strlen(str)-1;
       | 09F4  204B                           MOVEA.L     A3,A0
       | 09F6  4A18                           TST.B       (A0)+
       | 09F8  66FC                           BNE.B       09F6
       | 09FA  5388                           SUBQ.L      #1,A0
       | 09FC  91CB                           SUBA.L      A3,A0
       | 09FE  2008                           MOVE.L      A0,D0
       | 0A00  2C00                           MOVE.L      D0,D6
       | 0A02  5386                           SUBQ.L      #1,D6
; 382: 	if (i<1)
       | 0A04  2F4E 0018                      MOVE.L      A6,0018(A7)
       | 0A08  7001                           MOVEQ       #01,D0
       | 0A0A  BC80                           CMP.L       D0,D6
       | 0A0C  6D26                           BLT.B       0A34
; 383: 		return;
; 384: 	while(TextLength(rp, str, i) > numPixels)
       | 0A0E  224D                           MOVEA.L     A5,A1
       | 0A10  204B                           MOVEA.L     A3,A0
       | 0A12  2006                           MOVE.L      D6,D0
       | 0A14  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 0A18  4EAE FFCA                      JSR         FFCA(A6)
       | 0A1C  48C0                           EXT.L       D0
       | 0A1E  B087                           CMP.L       D7,D0
       | 0A20  2C6F 0018                      MOVEA.L     0018(A7),A6
       | 0A24  6F0E                           BLE.B       0A34
; 385: 	{
; 386: 		strcpy(str, str+1);	// SAS function, survived strcpy
       | 0A26  41EB 0001                      LEA         0001(A3),A0
       | 0A2A  224B                           MOVEA.L     A3,A1
       | 0A2C  12D8                           MOVE.B      (A0)+,(A1)+
       | 0A2E  66FC                           BNE.B       0A2C
; 387: 		i--;
       | 0A30  5386                           SUBQ.L      #1,D6
; 388: 	}
       | 0A32  60DA                           BRA.B       0A0E
; 389: }
       | 0A34  4CDF 78C0                      MOVEM.L     (A7)+,D6-D7/A3-A6
       | 0A38  584F                           ADDQ.W      #4,A7
       | 0A3A  4E75                           RTS
; 390: 
; 391: /******** PrintInBox() ********/
; 392: /*
; 393:  *	mode = PRINT_LEFTPART 	1
; 394:  *	mode = PRINT_RIGHTPART 	2
; 395:  *	mode = PRINT_CENTERED		3
; 396:  *
; 397:  */
; 398: 
; 399: void __saveds __asm LIBUA_PrintInBox(	register __a0 struct Window *window,
; 400: 																			register __a1 struct GadgetRecord *GR,
; 401: 																			register __d0 int x1,
; 402: 																			register __d1 int y1,
; 403: 																			register __d2 int x2,
; 404: 																			register __d3 int y2,
; 405: 																			register __a2 STRPTR oristr,
; 406: 																			register __d4 int mode)
; 407: {
       | 0A3C  9EFC 0114                      SUBA.W      #0114,A7
       | 0A40  48E7 3F3E                      MOVEM.L     D2-D7/A2-A6,-(A7)
       | 0A44  2A02                           MOVE.L      D2,D5
       | 0A46  2C01                           MOVE.L      D1,D6
       | 0A48  2E00                           MOVE.L      D0,D7
       | 0A4A  2649                           MOVEA.L     A1,A3
       | 0A4C  2A48                           MOVEA.L     A0,A5
       | 0A4E  49EE  0000-XX.2                LEA         _LinkerDB(A6),A4
; 408: TEXT str[256];
; 409: int x,y,len;
; 410: 
; 411: 	stccpy(str, oristr, 256);	// SAS function
       | 0A52  4878 0100                      PEA         0100
       | 0A56  2F0A                           MOVE.L      A2,-(A7)
       | 0A58  486F 0048                      PEA         0048(A7)
       | 0A5C  2F43 0038                      MOVE.L      D3,0038(A7)
       | 0A60  2F4E 003C                      MOVE.L      A6,003C(A7)
       | 0A64  4EBA  0000-XX.1                JSR         _stccpy(PC)
; 412: 
; 413: 	my_SetAPen(window, ChoosePen(window,GR,AREA_PEN));
       | 0A68  4878 0003                      PEA         0003
       | 0A6C  2F0B                           MOVE.L      A3,-(A7)
       | 0A6E  2F0D                           MOVE.L      A5,-(A7)
       | 0A70  4EBA  0000-XX.1                JSR         _ChoosePen(PC)
       | 0A74  2E80                           MOVE.L      D0,(A7)
       | 0A76  2F0D                           MOVE.L      A5,-(A7)
       | 0A78  4EBA  0000-XX.1                JSR         _my_SetAPen(PC)
       | 0A7C  4FEF 001C                      LEA         001C(A7),A7
; 414: 
; 415: 	if (window->WScreen->ViewPort.Modes & LACE)
       | 0A80  206D 002E                      MOVEA.L     002E(A5),A0
       | 0A84  0828 0002 004D                 BTST        #0002,004D(A0)
       | 0A8A  6720                           BEQ.B       0AAC
; 416: 		RectFill(window->RPort, x1+2, y1+2, x2-2, y2-2);
       | 0A8C  2007                           MOVE.L      D7,D0
       | 0A8E  5480                           ADDQ.L      #2,D0
       | 0A90  2206                           MOVE.L      D6,D1
       | 0A92  5481                           ADDQ.L      #2,D1
       | 0A94  2405                           MOVE.L      D5,D2
       | 0A96  5582                           SUBQ.L      #2,D2
       | 0A98  5583                           SUBQ.L      #2,D3
       | 0A9A  226D 0032                      MOVEA.L     0032(A5),A1
       | 0A9E  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 0AA2  4EAE FECE                      JSR         FECE(A6)
       | 0AA6  2C6F 0030                      MOVEA.L     0030(A7),A6
       | 0AAA  601A                           BRA.B       0AC6
; 417: 	else
; 418: 		RectFill(window->RPort, x1+2, y1+1, x2-2, y2-1);
       | 0AAC  2007                           MOVE.L      D7,D0
       | 0AAE  5480                           ADDQ.L      #2,D0
       | 0AB0  2206                           MOVE.L      D6,D1
       | 0AB2  5281                           ADDQ.L      #1,D1
       | 0AB4  2405                           MOVE.L      D5,D2
       | 0AB6  5582                           SUBQ.L      #2,D2
       | 0AB8  5383                           SUBQ.L      #1,D3
       | 0ABA  226D 0032                      MOVEA.L     0032(A5),A1
       | 0ABE  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 0AC2  4EAE FECE                      JSR         FECE(A6)
; 419: 
; 420: 	if (mode==PRINT_LEFTPART)
       | 0AC6  2004                           MOVE.L      D4,D0
       | 0AC8  5380                           SUBQ.L      #1,D0
       | 0ACA  2C6F 0030                      MOVEA.L     0030(A7),A6
       | 0ACE  661E                           BNE.B       0AEE
; 421: 	{
; 422: 		LIBUA_ShortenString(window->RPort, str, (x2-x1)-16);
       | 0AD0  2005                           MOVE.L      D5,D0
       | 0AD2  9087                           SUB.L       D7,D0
       | 0AD4  7210                           MOVEQ       #10,D1
       | 0AD6  9081                           SUB.L       D1,D0
       | 0AD8  206D 0032                      MOVEA.L     0032(A5),A0
       | 0ADC  43EF 0040                      LEA         0040(A7),A1
       | 0AE0  6100 FEA4                      BSR.W       0986
; 423: 		x = x1+4;
       | 0AE4  2007                           MOVE.L      D7,D0
       | 0AE6  5880                           ADDQ.L      #4,D0
       | 0AE8  2F40 003C                      MOVE.L      D0,003C(A7)
       | 0AEC  6062                           BRA.B       0B50
; 424: 	}
; 425: 	else if (mode==PRINT_RIGHTPART)
       | 0AEE  2004                           MOVE.L      D4,D0
       | 0AF0  5580                           SUBQ.L      #2,D0
       | 0AF2  661E                           BNE.B       0B12
; 426: 	{
; 427: 		LIBUA_ShortenStringFront(window->RPort, str, (x2-x1)-16);
       | 0AF4  2005                           MOVE.L      D5,D0
       | 0AF6  9087                           SUB.L       D7,D0
       | 0AF8  7210                           MOVEQ       #10,D1
       | 0AFA  9081                           SUB.L       D1,D0
       | 0AFC  206D 0032                      MOVEA.L     0032(A5),A0
       | 0B00  43EF 0040                      LEA         0040(A7),A1
       | 0B04  6100 FEDE                      BSR.W       09E4
; 428: 		x = x1+4;
       | 0B08  2007                           MOVE.L      D7,D0
       | 0B0A  5880                           ADDQ.L      #4,D0
       | 0B0C  2F40 003C                      MOVE.L      D0,003C(A7)
       | 0B10  603E                           BRA.B       0B50
; 429: 	}
; 430: 	else
; 431: 	{
; 432: 		len = TextLength(window->RPort, str, strlen(str));
       | 0B12  41EF 0040                      LEA         0040(A7),A0
       | 0B16  2248                           MOVEA.L     A0,A1
       | 0B18  4A19                           TST.B       (A1)+
       | 0B1A  66FC                           BNE.B       0B18
       | 0B1C  5389                           SUBQ.L      #1,A1
       | 0B1E  93C8                           SUBA.L      A0,A1
       | 0B20  2009                           MOVE.L      A1,D0
       | 0B22  226D 0032                      MOVEA.L     0032(A5),A1
       | 0B26  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 0B2A  4EAE FFCA                      JSR         FFCA(A6)
       | 0B2E  48C0                           EXT.L       D0
; 433: 		x = x2-x1;
       | 0B30  2205                           MOVE.L      D5,D1
       | 0B32  9287                           SUB.L       D7,D1
; 434: 		x = (x-len)/2;
       | 0B34  2F41 003C                      MOVE.L      D1,003C(A7)
       | 0B38  9280                           SUB.L       D0,D1
       | 0B3A  4A81                           TST.L       D1
       | 0B3C  6A02                           BPL.B       0B40
       | 0B3E  5281                           ADDQ.L      #1,D1
       | 0B40  E281                           ASR.L       #1,D1
; 435: 		x = x1+x;
       | 0B42  2F41 003C                      MOVE.L      D1,003C(A7)
       | 0B46  D287                           ADD.L       D7,D1
       | 0B48  2F40 0034                      MOVE.L      D0,0034(A7)
       | 0B4C  2F41 003C                      MOVE.L      D1,003C(A7)
; 436: 	}
; 437: 
; 438: 	y = y2 - y1 - window->RPort->TxHeight;
       | 0B50  202F 002C                      MOVE.L      002C(A7),D0
       | 0B54  9086                           SUB.L       D6,D0
       | 0B56  206D 0032                      MOVEA.L     0032(A5),A0
       | 0B5A  7200                           MOVEQ       #00,D1
       | 0B5C  3228 003A                      MOVE.W      003A(A0),D1
       | 0B60  9081                           SUB.L       D1,D0
; 439: 	y = y/2;
       | 0B62  2F40 0038                      MOVE.L      D0,0038(A7)
       | 0B66  6A02                           BPL.B       0B6A
       | 0B68  5280                           ADDQ.L      #1,D0
       | 0B6A  E280                           ASR.L       #1,D0
; 440: 	y += (y1 + window->RPort->TxBaseline + 1);
       | 0B6C  7200                           MOVEQ       #00,D1
       | 0B6E  3228 003E                      MOVE.W      003E(A0),D1
       | 0B72  2406                           MOVE.L      D6,D2
       | 0B74  D481                           ADD.L       D1,D2
       | 0B76  5282                           ADDQ.L      #1,D2
       | 0B78  2F40 0038                      MOVE.L      D0,0038(A7)
       | 0B7C  D082                           ADD.L       D2,D0
; 441: 
; 442: 	if (	GR->type==STRING_GADGET || GR->type==SPECIAL_STRING_GADGET ||
       | 0B7E  48EF 0001 0038                 MOVEM.L     D0,0038(A7)
       | 0B84  302B 0010                      MOVE.W      0010(A3),D0
       | 0B88  7202                           MOVEQ       #02,D1
       | 0B8A  B041                           CMP.W       D1,D0
       | 0B8C  6716                           BEQ.B       0BA4
       | 0B8E  7206                           MOVEQ       #06,D1
       | 0B90  B041                           CMP.W       D1,D0
       | 0B92  6710                           BEQ.B       0BA4
; 443: 				GR->type==BUTTON_GADGET || GR->type==HIBOX_REGION )
       | 0B94  7201                           MOVEQ       #01,D1
       | 0B96  B041                           CMP.W       D1,D0
       | 0B98  670A                           BEQ.B       0BA4
       | 0B9A  720A                           MOVEQ       #0A,D1
       | 0B9C  B041                           CMP.W       D1,D0
       | 0B9E  2C6F 0030                      MOVEA.L     0030(A7),A6
       | 0BA2  661A                           BNE.B       0BBE
; 444: 		my_SetAPen(window, ChooseTextPen(window,GR));
       | 0BA4  2F0B                           MOVE.L      A3,-(A7)
       | 0BA6  2F0D                           MOVE.L      A5,-(A7)
       | 0BA8  2C6F 0038                      MOVEA.L     0038(A7),A6
       | 0BAC  4EBA  0000-XX.1                JSR         _ChooseTextPen(PC)
       | 0BB0  2E80                           MOVE.L      D0,(A7)
       | 0BB2  2F0D                           MOVE.L      A5,-(A7)
       | 0BB4  4EBA  0000-XX.1                JSR         _my_SetAPen(PC)
       | 0BB8  4FEF 000C                      LEA         000C(A7),A7
       | 0BBC  6018                           BRA.B       0BD6
; 445: 	else
; 446: 		my_SetAPen(window, ChoosePen(window,GR,LO_PEN));
       | 0BBE  4878 0001                      PEA         0001
       | 0BC2  2F0B                           MOVE.L      A3,-(A7)
       | 0BC4  2F0D                           MOVE.L      A5,-(A7)
       | 0BC6  4EBA  0000-XX.1                JSR         _ChoosePen(PC)
       | 0BCA  2E80                           MOVE.L      D0,(A7)
       | 0BCC  2F0D                           MOVE.L      A5,-(A7)
       | 0BCE  4EBA  0000-XX.1                JSR         _my_SetAPen(PC)
       | 0BD2  4FEF 0010                      LEA         0010(A7),A7
; 447: 
; 448: 	Move(window->RPort, (LONG)x, (LONG)y);
       | 0BD6  226D 0032                      MOVEA.L     0032(A5),A1
       | 0BDA  202F 003C                      MOVE.L      003C(A7),D0
       | 0BDE  222F 0038                      MOVE.L      0038(A7),D1
       | 0BE2  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 0BE6  4EAE FF10                      JSR         FF10(A6)
; 449: 	Text(window->RPort, str, strlen(str));
       | 0BEA  41EF 0040                      LEA         0040(A7),A0
       | 0BEE  2248                           MOVEA.L     A0,A1
       | 0BF0  4A19                           TST.B       (A1)+
       | 0BF2  66FC                           BNE.B       0BF0
       | 0BF4  5389                           SUBQ.L      #1,A1
       | 0BF6  93C8                           SUBA.L      A0,A1
       | 0BF8  2009                           MOVE.L      A1,D0
       | 0BFA  226D 0032                      MOVEA.L     0032(A5),A1
       | 0BFE  4EAE FFC4                      JSR         FFC4(A6)
; 450: }
       | 0C02  4CDF 7CFC                      MOVEM.L     (A7)+,D2-D7/A2-A6
       | 0C06  DEFC 0114                      ADDA.W      #0114,A7
       | 0C0A  4E75                           RTS
; 451: 
; 452: /******** printSeveralLines() ********/
; 453: 
; 454: void __saveds __asm LIBUA_printSeveralLines(register __a0 struct Window *window,
; 455: 																						register __a1 struct GadgetRecord *GR,
; 456: 																						register __d0 int x,
; 457: 																						register __d1 int y,
; 458: 																						register __d2 int width,
; 459: 																						register __d3 int height,
; 460: 																						register __a2 STRPTR str)
; 461: {
       | 0C0C  9EFC 011C                      SUBA.W      #011C,A7
       | 0C10  48E7 3F3E                      MOVEM.L     D2-D7/A2-A6,-(A7)
       | 0C14  2803                           MOVE.L      D3,D4
       | 0C16  2A02                           MOVE.L      D2,D5
       | 0C18  2C01                           MOVE.L      D1,D6
       | 0C1A  2E00                           MOVE.L      D0,D7
       | 0C1C  2649                           MOVEA.L     A1,A3
       | 0C1E  2A48                           MOVEA.L     A0,A5
       | 0C20  49EE  0000-XX.2                LEA         _LinkerDB(A6),A4
; 462: char *strPtr;
; 463: TEXT subStr[256], smallStr[2];	// see len check
; 464: int numChars, len, oldX, i;
; 465: 
; 466: 	len = strlen(str);
       | 0C24  204A                           MOVEA.L     A2,A0
       | 0C26  4A18                           TST.B       (A0)+
       | 0C28  66FC                           BNE.B       0C26
       | 0C2A  5388                           SUBQ.L      #1,A0
       | 0C2C  91CA                           SUBA.L      A2,A0
; 467: 	for(i=0; i<len; i++)
       | 0C2E  42AF 0034                      CLR.L       0034(A7)
       | 0C32  2F48 003C                      MOVE.L      A0,003C(A7)
       | 0C36  2F4E 002C                      MOVE.L      A6,002C(A7)
       | 0C3A  202F 0034                      MOVE.L      0034(A7),D0
       | 0C3E  B0AF 003C                      CMP.L       003C(A7),D0
       | 0C42  6C18                           BGE.B       0C5C
; 468: 		if ( *(str+i)==0x27 )
       | 0C44  7027                           MOVEQ       #27,D0
       | 0C46  222F 0034                      MOVE.L      0034(A7),D1
       | 0C4A  B032 1800                      CMP.B       00(A2,D1.L),D0
       | 0C4E  6606                           BNE.B       0C56
; 469: 			*(str+i)=0x95;
       | 0C50  15BC 0095 1800                 MOVE.B      #95,00(A2,D1.L)
       | 0C56  52AF 0034                      ADDQ.L      #1,0034(A7)
       | 0C5A  60DE                           BRA.B       0C3A
; 470: 
; 471: 	oldX = x;
       | 0C5C  2F47 0038                      MOVE.L      D7,0038(A7)
; 472: 	smallStr[1]='\0';
       | 0C60  422F 0033                      CLR.B       0033(A7)
; 473: 
; 474: 	my_SetAPen(window, ChoosePen(window,GR,LO_PEN));
       | 0C64  4878 0001                      PEA         0001
       | 0C68  2F0B                           MOVE.L      A3,-(A7)
       | 0C6A  2F0D                           MOVE.L      A5,-(A7)
       | 0C6C  4EBA  0000-XX.1                JSR         _ChoosePen(PC)
       | 0C70  2E80                           MOVE.L      D0,(A7)
       | 0C72  2F0D                           MOVE.L      A5,-(A7)
       | 0C74  4EBA  0000-XX.1                JSR         _my_SetAPen(PC)
       | 0C78  4FEF 0010                      LEA         0010(A7),A7
; 475: 
; 476: 	Move(window->RPort, x, y);
       | 0C7C  226D 0032                      MOVEA.L     0032(A5),A1
       | 0C80  2007                           MOVE.L      D7,D0
       | 0C82  2206                           MOVE.L      D6,D1
       | 0C84  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 0C88  4EAE FF10                      JSR         FF10(A6)
; 477: 
; 478: 	strPtr = str;
       | 0C8C  2F4A 0144                      MOVE.L      A2,0144(A7)
       | 0C90  2C6F 002C                      MOVEA.L     002C(A7),A6
; 479: 	while(1)
; 480: 	{
; 481: 		numChars = stcarg(strPtr, " ':/");			// SAS function
       | 0C94  486C  000E-01.2                PEA         01.0000000E(A4)
       | 0C98  2F2F 0148                      MOVE.L      0148(A7),-(A7)
       | 0C9C  4EBA  0000-XX.1                JSR         _stcarg(PC)
; 482: 		stccpy(subStr, strPtr, numChars+1);
       | 0CA0  2F40 0048                      MOVE.L      D0,0048(A7)
       | 0CA4  5280                           ADDQ.L      #1,D0
       | 0CA6  2E80                           MOVE.L      D0,(A7)
       | 0CA8  2F2F 014C                      MOVE.L      014C(A7),-(A7)
       | 0CAC  486F 0050                      PEA         0050(A7)
       | 0CB0  4EBA  0000-XX.1                JSR         _stccpy(PC)
       | 0CB4  4FEF 0010                      LEA         0010(A7),A7
; 483: 
; 484: 		if (numChars>0)
       | 0CB8  202F 0040                      MOVE.L      0040(A7),D0
       | 0CBC  4A80                           TST.L       D0
       | 0CBE  6F1A                           BLE.B       0CDA
; 485: 		{
; 486: 			smallStr[0] = *(strPtr+numChars);
       | 0CC0  206F 0144                      MOVEA.L     0144(A7),A0
       | 0CC4  1030 0800                      MOVE.B      00(A0,D0.L),D0
       | 0CC8  1F40 0032                      MOVE.B      D0,0032(A7)
; 487: 			strcat(subStr,smallStr);
       | 0CCC  486F 0032                      PEA         0032(A7)
       | 0CD0  486F 0048                      PEA         0048(A7)
       | 0CD4  4EBA  0000-XX.1                JSR         _strcat(PC)
       | 0CD8  504F                           ADDQ.W      #8,A7
; 488: 		}
; 489: 
; 490: 		len = strlen(subStr);	// SAS function
       | 0CDA  41EF 0044                      LEA         0044(A7),A0
       | 0CDE  2248                           MOVEA.L     A0,A1
       | 0CE0  4A19                           TST.B       (A1)+
       | 0CE2  66FC                           BNE.B       0CE0
       | 0CE4  5389                           SUBQ.L      #1,A1
       | 0CE6  93C8                           SUBA.L      A0,A1
; 491: 
; 492: 		if (len>256)
       | 0CE8  2F49 003C                      MOVE.L      A1,003C(A7)
       | 0CEC  2009                           MOVE.L      A1,D0
       | 0CEE  0C80 0000 0100                 CMPI.L      #00000100,D0
       | 0CF4  6F0A                           BLE.B       0D00
; 493: 			LIBUA_WarnUser(1002);
       | 0CF6  203C 0000 03EA                 MOVE.L      #000003EA,D0
       | 0CFC  4EBA  0000-XX.1                JSR         _LIBUA_WarnUser(PC)
; 494: 
; 495: 		if ( (x + TextLength(window->RPort, subStr, len)) > width )
       | 0D00  226D 0032                      MOVEA.L     0032(A5),A1
       | 0D04  41EF 0044                      LEA         0044(A7),A0
       | 0D08  202F 003C                      MOVE.L      003C(A7),D0
       | 0D0C  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 0D10  4EAE FFCA                      JSR         FFCA(A6)
       | 0D14  48C0                           EXT.L       D0
       | 0D16  2207                           MOVE.L      D7,D1
       | 0D18  D280                           ADD.L       D0,D1
       | 0D1A  B285                           CMP.L       D5,D1
       | 0D1C  2C6F 002C                      MOVEA.L     002C(A7),A6
       | 0D20  6F16                           BLE.B       0D38
; 496: 		{
; 497: 			x = oldX;
       | 0D22  2E2F 0038                      MOVE.L      0038(A7),D7
; 498: 			y += window->RPort->TxBaseline+4;
       | 0D26  206D 0032                      MOVEA.L     0032(A5),A0
       | 0D2A  7000                           MOVEQ       #00,D0
       | 0D2C  3028 003E                      MOVE.W      003E(A0),D0
       | 0D30  5880                           ADDQ.L      #4,D0
       | 0D32  DC80                           ADD.L       D0,D6
; 499: 			if (y>height)
       | 0D34  BC84                           CMP.L       D4,D6
       | 0D36  6E5E                           BGT.B       0D96
; 500: 				break;
; 501: 		}
; 502: 
; 503: 		Move(window->RPort, x, y);
       | 0D38  226D 0032                      MOVEA.L     0032(A5),A1
       | 0D3C  2007                           MOVE.L      D7,D0
       | 0D3E  2206                           MOVE.L      D6,D1
       | 0D40  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 0D44  4EAE FF10                      JSR         FF10(A6)
; 504: 		Text(window->RPort, subStr, strlen(subStr));
       | 0D48  41EF 0044                      LEA         0044(A7),A0
       | 0D4C  2248                           MOVEA.L     A0,A1
       | 0D4E  4A19                           TST.B       (A1)+
       | 0D50  66FC                           BNE.B       0D4E
       | 0D52  5389                           SUBQ.L      #1,A1
       | 0D54  93C8                           SUBA.L      A0,A1
       | 0D56  2009                           MOVE.L      A1,D0
       | 0D58  226D 0032                      MOVEA.L     0032(A5),A1
       | 0D5C  4EAE FFC4                      JSR         FFC4(A6)
; 505: 
; 506: 		x += TextLength(window->RPort, subStr, strlen(subStr));
       | 0D60  41EF 0044                      LEA         0044(A7),A0
       | 0D64  2248                           MOVEA.L     A0,A1
       | 0D66  4A19                           TST.B       (A1)+
       | 0D68  66FC                           BNE.B       0D66
       | 0D6A  5389                           SUBQ.L      #1,A1
       | 0D6C  93C8                           SUBA.L      A0,A1
       | 0D6E  2009                           MOVE.L      A1,D0
       | 0D70  226D 0032                      MOVEA.L     0032(A5),A1
       | 0D74  4EAE FFCA                      JSR         FFCA(A6)
       | 0D78  48C0                           EXT.L       D0
       | 0D7A  DE80                           ADD.L       D0,D7
; 507: 
; 508: 		strPtr += (numChars+1);
       | 0D7C  202F 0040                      MOVE.L      0040(A7),D0
       | 0D80  5280                           ADDQ.L      #1,D0
       | 0D82  D1AF 0144                      ADD.L       D0,0144(A7)
; 509: 
; 510: 		if (*(strPtr-1)==0)
       | 0D86  206F 0144                      MOVEA.L     0144(A7),A0
       | 0D8A  4A28 FFFF                      TST.B       FFFF(A0)
       | 0D8E  2C6F 002C                      MOVEA.L     002C(A7),A6
       | 0D92  6600 FF00                      BNE.W       0C94
; 511: 			break;
; 512: 	}
       | 0D96  4CDF 7CFC                      MOVEM.L     (A7)+,D2-D7/A2-A6
       | 0D9A  DEFC 011C                      ADDA.W      #011C,A7
       | 0D9E  4E75                           RTS
; 513: }
; 514: 
; 515: /******** SwitchMouseMoveOn() ********/
; 516: 
; 517: void __saveds __asm LIBUA_SwitchMouseMoveOn(register __a0 struct Window *window)
; 518: {
       | 0DA0  594F                           SUBQ.W      #4,A7
       | 0DA2  48E7 000E                      MOVEM.L     A4-A6,-(A7)
       | 0DA6  2A48                           MOVEA.L     A0,A5
       | 0DA8  49EE  0000-XX.2                LEA         _LinkerDB(A6),A4
; 519: 	LIBUA_SwitchFlagsOn(window,IDCMP_MOUSEMOVE);
       | 0DAC  2F4E 000C                      MOVE.L      A6,000C(A7)
       | 0DB0  204D                           MOVEA.L     A5,A0
       | 0DB2  7010                           MOVEQ       #10,D0
       | 0DB4  6100 04A6                      BSR.W       125C
; 520: 	Forbid();
       | 0DB8  2C6C  0000-XX.2                MOVEA.L     _SysBase(A4),A6
       | 0DBC  4EAE FF7C                      JSR         FF7C(A6)
; 521: 	window->Flags |= WFLG_REPORTMOUSE;
       | 0DC0  08ED 0009 001A                 BSET        #0009,001A(A5)
; 522: 	Permit();
       | 0DC6  2C6C  0000-XX.2                MOVEA.L     _SysBase(A4),A6
       | 0DCA  4EAE FF76                      JSR         FF76(A6)
; 523: }
       | 0DCE  4CDF 7000                      MOVEM.L     (A7)+,A4-A6
       | 0DD2  584F                           ADDQ.W      #4,A7
       | 0DD4  4E75                           RTS
; 524: 
; 525: /******** SwitchMouseMoveOff() ********/
; 526: 
; 527: void __saveds __asm LIBUA_SwitchMouseMoveOff(register __a0 struct Window *window)
; 528: {
       | 0DD6  594F                           SUBQ.W      #4,A7
       | 0DD8  48E7 000E                      MOVEM.L     A4-A6,-(A7)
       | 0DDC  2A48                           MOVEA.L     A0,A5
       | 0DDE  49EE  0000-XX.2                LEA         _LinkerDB(A6),A4
; 529: 	LIBUA_SwitchFlagsOff(window,IDCMP_MOUSEMOVE);
       | 0DE2  2F4E 000C                      MOVE.L      A6,000C(A7)
       | 0DE6  204D                           MOVEA.L     A5,A0
       | 0DE8  7010                           MOVEQ       #10,D0
       | 0DEA  6100 04B2                      BSR.W       129E
; 530: 	Forbid();
       | 0DEE  2C6C  0000-XX.2                MOVEA.L     _SysBase(A4),A6
       | 0DF2  4EAE FF7C                      JSR         FF7C(A6)
; 531: 	window->Flags &= ~WFLG_REPORTMOUSE;
       | 0DF6  08AD 0009 001A                 BCLR        #0009,001A(A5)
; 532: 	Permit();
       | 0DFC  2C6C  0000-XX.2                MOVEA.L     _SysBase(A4),A6
       | 0E00  4EAE FF76                      JSR         FF76(A6)
; 533: }
       | 0E04  4CDF 7000                      MOVEM.L     (A7)+,A4-A6
       | 0E08  584F                           ADDQ.W      #4,A7
       | 0E0A  4E75                           RTS
; 534: 
; 535: /******** GetPropSlider() ********/
; 536: 
; 537: void __saveds __asm LIBUA_GetPropSlider(register __a0	struct Window *window,
; 538: 																				register __a1	struct Gadget *g,
; 539: 																				register __d0	int numEntries,
; 540: 																				register __d1	int numDisplay,
; 541: 																				register __a2	int *top)
; 542: {
       | 0E0C  9EFC 000C                      SUBA.W      #000C,A7
       | 0E10  48E7 0F3C                      MOVEM.L     D4-D7/A2-A5,-(A7)
       | 0E14  2C01                           MOVE.L      D1,D6
       | 0E16  2E00                           MOVE.L      D0,D7
       | 0E18  2649                           MOVEA.L     A1,A3
       | 0E1A  2A48                           MOVEA.L     A0,A5
       | 0E1C  49EE  0000-XX.2                LEA         _LinkerDB(A6),A4
; 543: struct PropInfo *p;
; 544: ULONG longTop, longNE, longND;
; 545: 
; 546: 	longNE = (ULONG)numEntries;
       | 0E20  2807                           MOVE.L      D7,D4
; 547: 	longND = (ULONG)numDisplay;
       | 0E22  2006                           MOVE.L      D6,D0
; 548: 
; 549: 	p = (struct PropInfo *)g->SpecialInfo;
       | 0E24  2F6B 0022 0028                 MOVE.L      0022(A3),0028(A7)
; 550: 	if (numEntries > numDisplay)
       | 0E2A  2F40 0024                      MOVE.L      D0,0024(A7)
       | 0E2E  48EF 4000 0020                 MOVEM.L     A6,0020(A7)
       | 0E34  BE86                           CMP.L       D6,D7
       | 0E36  6F20                           BLE.B       0E58
; 551: 		longTop = (p->VertPot * (longNE-longND))/MAXBODY;
       | 0E38  2204                           MOVE.L      D4,D1
       | 0E3A  9280                           SUB.L       D0,D1
       | 0E3C  7000                           MOVEQ       #00,D0
       | 0E3E  206F 0028                      MOVEA.L     0028(A7),A0
       | 0E42  3028 0004                      MOVE.W      0004(A0),D0
       | 0E46  4EBA  0000-XX.1                JSR         __CXM22(PC)
       | 0E4A  223C 0000 FFFF                 MOVE.L      #0000FFFF,D1
       | 0E50  4EBA  0000-XX.1                JSR         __CXD22(PC)
       | 0E54  2A00                           MOVE.L      D0,D5
       | 0E56  6002                           BRA.B       0E5A
; 552: 	else
; 553: 		longTop = 0L;
       | 0E58  7A00                           MOVEQ       #00,D5
; 554: 
; 555: 	*top = (int)longTop;
       | 0E5A  2485                           MOVE.L      D5,(A2)
; 556: }
       | 0E5C  4CDF 3CF0                      MOVEM.L     (A7)+,D4-D7/A2-A5
       | 0E60  DEFC 000C                      ADDA.W      #000C,A7
       | 0E64  4E75                           RTS
; 557: 
; 558: /******** GetHorizPropSlider() ********/
; 559: 
; 560: void __saveds __asm LIBUA_GetHorizPropSlider(	register __a0	struct Window *window,
; 561: 																							register __a1	struct Gadget *g,
; 562: 																							register __d0	int numEntries,
; 563: 																							register __d1	int numDisplay,
; 564: 																							register __a2	int *top)
; 565: {
       | 0E66  9EFC 000C                      SUBA.W      #000C,A7
       | 0E6A  48E7 0F3C                      MOVEM.L     D4-D7/A2-A5,-(A7)
       | 0E6E  2C01                           MOVE.L      D1,D6
       | 0E70  2E00                           MOVE.L      D0,D7
       | 0E72  2649                           MOVEA.L     A1,A3
       | 0E74  2A48                           MOVEA.L     A0,A5
       | 0E76  49EE  0000-XX.2                LEA         _LinkerDB(A6),A4
; 566: struct PropInfo *p;
; 567: ULONG longTop, longNE, longND;
; 568: 
; 569: 	longNE = (ULONG)numEntries;
       | 0E7A  2807                           MOVE.L      D7,D4
; 570: 	longND = (ULONG)numDisplay;
       | 0E7C  2006                           MOVE.L      D6,D0
; 571: 
; 572: 	p = (struct PropInfo *)g->SpecialInfo;
       | 0E7E  2F6B 0022 0028                 MOVE.L      0022(A3),0028(A7)
; 573: 	if (numEntries > numDisplay)
       | 0E84  2F40 0024                      MOVE.L      D0,0024(A7)
       | 0E88  48EF 4000 0020                 MOVEM.L     A6,0020(A7)
       | 0E8E  BE86                           CMP.L       D6,D7
       | 0E90  6F20                           BLE.B       0EB2
; 574: 		longTop = (p->HorizPot * (longNE-longND))/MAXBODY;
       | 0E92  2204                           MOVE.L      D4,D1
       | 0E94  9280                           SUB.L       D0,D1
       | 0E96  7000                           MOVEQ       #00,D0
       | 0E98  206F 0028                      MOVEA.L     0028(A7),A0
       | 0E9C  3028 0002                      MOVE.W      0002(A0),D0
       | 0EA0  4EBA  0000-XX.1                JSR         __CXM22(PC)
       | 0EA4  223C 0000 FFFF                 MOVE.L      #0000FFFF,D1
       | 0EAA  4EBA  0000-XX.1                JSR         __CXD22(PC)
       | 0EAE  2A00                           MOVE.L      D0,D5
       | 0EB0  6002                           BRA.B       0EB4
; 575: 	else
; 576: 		longTop = 0L;
       | 0EB2  7A00                           MOVEQ       #00,D5
; 577: 
; 578: 	*top = (int)longTop;
       | 0EB4  2485                           MOVE.L      D5,(A2)
; 579: }
       | 0EB6  4CDF 3CF0                      MOVEM.L     (A7)+,D4-D7/A2-A5
       | 0EBA  DEFC 000C                      ADDA.W      #000C,A7
       | 0EBE  4E75                           RTS
; 580: 
; 581: /******** InitPropSlider() ********/
; 582: 
; 583: void __saveds __asm LIBUA_InitPropSlider(	register __a0	struct Window *window,
; 584: 																					register __a1	struct Gadget *g,
; 585: 																					register __d0	ULONG numEntries,
; 586: 																					register __d1	ULONG numDisplay,
; 587: 																					register __d2	LONG topEntry)
; 588: {
       | 0EC0  514F                           SUBQ.W      #8,A7
       | 0EC2  48E7 3F3E                      MOVEM.L     D2-D7/A2-A6,-(A7)
       | 0EC6  2A02                           MOVE.L      D2,D5
       | 0EC8  2C01                           MOVE.L      D1,D6
       | 0ECA  2E00                           MOVE.L      D0,D7
       | 0ECC  2649                           MOVEA.L     A1,A3
       | 0ECE  2A48                           MOVEA.L     A0,A5
       | 0ED0  49EE  0000-XX.2                LEA         _LinkerDB(A6),A4
; 589: ULONG value1, value2;
; 590: 
; 591: 	if (numEntries<=0)
       | 0ED4  2F4E 002C                      MOVE.L      A6,002C(A7)
       | 0ED8  7000                           MOVEQ       #00,D0
       | 0EDA  BE80                           CMP.L       D0,D7
       | 0EDC  622C                           BHI.B       0F0A
; 592: 		NewModifyProp(g, window, NULL, AUTOKNOB|FREEVERT|PROPBORDERLESS, NULL, NULL, MAXBODY, MAXBODY, 1L);
       | 0EDE  48E7 0C00                      MOVEM.L     D4-D5,-(A7)
       | 0EE2  204B                           MOVEA.L     A3,A0
       | 0EE4  224D                           MOVEA.L     A5,A1
       | 0EE6  2C6C  0000-XX.2                MOVEA.L     _IntuitionBase(A4),A6
       | 0EEA  95CA                           SUBA.L      A2,A2
       | 0EEC  700D                           MOVEQ       #0D,D0
       | 0EEE  7200                           MOVEQ       #00,D1
       | 0EF0  2401                           MOVE.L      D1,D2
       | 0EF2  263C 0000 FFFF                 MOVE.L      #0000FFFF,D3
       | 0EF8  2803                           MOVE.L      D3,D4
       | 0EFA  7A01                           MOVEQ       #01,D5
       | 0EFC  4EAE FE2C                      JSR         FE2C(A6)
       | 0F00  4CDF 0030                      MOVEM.L     (A7)+,D4-D5
       | 0F04  2C6F 002C                      MOVEA.L     002C(A7),A6
       | 0F08  605A                           BRA.B       0F64
; 593: 	else
; 594: 	{	
; 595: 		if (numEntries > numDisplay)
       | 0F0A  BE86                           CMP.L       D6,D7
       | 0F0C  6324                           BLS.B       0F32
; 596: 		{
; 597: 			value1 = (MAXBODY*topEntry) / numEntries;
       | 0F0E  2005                           MOVE.L      D5,D0
       | 0F10  4840                           SWAP        D0
       | 0F12  4240                           CLR.W       D0
       | 0F14  9085                           SUB.L       D5,D0
       | 0F16  2207                           MOVE.L      D7,D1
       | 0F18  4EBA  0000-XX.1                JSR         __CXD22(PC)
       | 0F1C  2800                           MOVE.L      D0,D4
; 598: 			value2 = (MAXBODY*numDisplay) / numEntries;
       | 0F1E  2006                           MOVE.L      D6,D0
       | 0F20  4840                           SWAP        D0
       | 0F22  4240                           CLR.W       D0
       | 0F24  9086                           SUB.L       D6,D0
       | 0F26  2207                           MOVE.L      D7,D1
       | 0F28  4EBA  0000-XX.1                JSR         __CXD22(PC)
       | 0F2C  2F40 0030                      MOVE.L      D0,0030(A7)
       | 0F30  600C                           BRA.B       0F3E
; 599: 		}
; 600: 		else
; 601: 		{
; 602: 			value1 = NULL;
       | 0F32  2800                           MOVE.L      D0,D4
; 603: 			value2 = MAXBODY;
       | 0F34  203C 0000 FFFF                 MOVE.L      #0000FFFF,D0
       | 0F3A  2F40 0030                      MOVE.L      D0,0030(A7)
; 604: 		}
; 605: 		NewModifyProp(g, window, NULL, AUTOKNOB|FREEVERT|PROPBORDERLESS,
; 606: 									NULL, value1, MAXBODY, value2, 1L);
       | 0F3E  48E7 0C00                      MOVEM.L     D4-D5,-(A7)
       | 0F42  2404                           MOVE.L      D4,D2
       | 0F44  2800                           MOVE.L      D0,D4
       | 0F46  204B                           MOVEA.L     A3,A0
       | 0F48  224D                           MOVEA.L     A5,A1
       | 0F4A  2C6C  0000-XX.2                MOVEA.L     _IntuitionBase(A4),A6
       | 0F4E  95CA                           SUBA.L      A2,A2
       | 0F50  700D                           MOVEQ       #0D,D0
       | 0F52  7200                           MOVEQ       #00,D1
       | 0F54  263C 0000 FFFF                 MOVE.L      #0000FFFF,D3
       | 0F5A  7A01                           MOVEQ       #01,D5
       | 0F5C  4EAE FE2C                      JSR         FE2C(A6)
       | 0F60  4CDF 0030                      MOVEM.L     (A7)+,D4-D5
; 607: 	}
; 608: 
; 609: 	RefreshGList(g, window, NULL, 1);
       | 0F64  204B                           MOVEA.L     A3,A0
       | 0F66  224D                           MOVEA.L     A5,A1
       | 0F68  2C6C  0000-XX.2                MOVEA.L     _IntuitionBase(A4),A6
       | 0F6C  95CA                           SUBA.L      A2,A2
       | 0F6E  7001                           MOVEQ       #01,D0
       | 0F70  4EAE FE50                      JSR         FE50(A6)
; 610: }
       | 0F74  4CDF 7CFC                      MOVEM.L     (A7)+,D2-D7/A2-A6
       | 0F78  504F                           ADDQ.W      #8,A7
       | 0F7A  4E75                           RTS
; 611: 
; 612: /******** InitHorizPropSlider() ********/
; 613: 
; 614: void __saveds __asm LIBUA_InitHorizPropSlider(register __a0	struct Window *window,
; 615: 																							register __a1	struct Gadget *g,
; 616: 																							register __d0	ULONG numEntries,
; 617: 																							register __d1	ULONG numDisplay,
; 618: 																							register __d2	LONG topEntry)
; 619: {
       | 0F7C  514F                           SUBQ.W      #8,A7
       | 0F7E  48E7 3F3E                      MOVEM.L     D2-D7/A2-A6,-(A7)
       | 0F82  2A02                           MOVE.L      D2,D5
       | 0F84  2C01                           MOVE.L      D1,D6
       | 0F86  2E00                           MOVE.L      D0,D7
       | 0F88  2649                           MOVEA.L     A1,A3
       | 0F8A  2A48                           MOVEA.L     A0,A5
       | 0F8C  49EE  0000-XX.2                LEA         _LinkerDB(A6),A4
; 620: ULONG value1, value2;
; 621: 
; 622: 	if (numEntries<=0)
       | 0F90  2F4E 002C                      MOVE.L      A6,002C(A7)
       | 0F94  7000                           MOVEQ       #00,D0
       | 0F96  BE80                           CMP.L       D0,D7
       | 0F98  622C                           BHI.B       0FC6
; 623: 		NewModifyProp(g, window, NULL, AUTOKNOB|FREEHORIZ|PROPBORDERLESS, MAXBODY, MAXBODY, NULL, NULL, 1L);
       | 0F9A  48E7 0C00                      MOVEM.L     D4-D5,-(A7)
       | 0F9E  204B                           MOVEA.L     A3,A0
       | 0FA0  224D                           MOVEA.L     A5,A1
       | 0FA2  2C6C  0000-XX.2                MOVEA.L     _IntuitionBase(A4),A6
       | 0FA6  95CA                           SUBA.L      A2,A2
       | 0FA8  700B                           MOVEQ       #0B,D0
       | 0FAA  223C 0000 FFFF                 MOVE.L      #0000FFFF,D1
       | 0FB0  2401                           MOVE.L      D1,D2
       | 0FB2  7600                           MOVEQ       #00,D3
       | 0FB4  2803                           MOVE.L      D3,D4
       | 0FB6  7A01                           MOVEQ       #01,D5
       | 0FB8  4EAE FE2C                      JSR         FE2C(A6)
       | 0FBC  4CDF 0030                      MOVEM.L     (A7)+,D4-D5
       | 0FC0  2C6F 002C                      MOVEA.L     002C(A7),A6
       | 0FC4  605A                           BRA.B       1020
; 624: 	else
; 625: 	{	
; 626: 		if (numEntries > numDisplay)
       | 0FC6  BE86                           CMP.L       D6,D7
       | 0FC8  6324                           BLS.B       0FEE
; 627: 		{
; 628: 			value1 = (MAXBODY*topEntry) / numEntries;
       | 0FCA  2005                           MOVE.L      D5,D0
       | 0FCC  4840                           SWAP        D0
       | 0FCE  4240                           CLR.W       D0
       | 0FD0  9085                           SUB.L       D5,D0
       | 0FD2  2207                           MOVE.L      D7,D1
       | 0FD4  4EBA  0000-XX.1                JSR         __CXD22(PC)
       | 0FD8  2800                           MOVE.L      D0,D4
; 629: 			value2 = (MAXBODY*numDisplay) / numEntries;
       | 0FDA  2006                           MOVE.L      D6,D0
       | 0FDC  4840                           SWAP        D0
       | 0FDE  4240                           CLR.W       D0
       | 0FE0  9086                           SUB.L       D6,D0
       | 0FE2  2207                           MOVE.L      D7,D1
       | 0FE4  4EBA  0000-XX.1                JSR         __CXD22(PC)
       | 0FE8  2F40 0030                      MOVE.L      D0,0030(A7)
       | 0FEC  600C                           BRA.B       0FFA
; 630: 		}
; 631: 		else
; 632: 		{
; 633: 			value1 = NULL;
       | 0FEE  2800                           MOVE.L      D0,D4
; 634: 			value2 = MAXBODY;
       | 0FF0  203C 0000 FFFF                 MOVE.L      #0000FFFF,D0
       | 0FF6  2F40 0030                      MOVE.L      D0,0030(A7)
; 635: 		}
; 636: 		NewModifyProp(g, window, NULL, AUTOKNOB|FREEHORIZ|PROPBORDERLESS,
; 637: 									value1, NULL, value2, MAXBODY, 1L);
       | 0FFA  48E7 0C00                      MOVEM.L     D4-D5,-(A7)
       | 0FFE  2204                           MOVE.L      D4,D1
       | 1000  2600                           MOVE.L      D0,D3
       | 1002  204B                           MOVEA.L     A3,A0
       | 1004  224D                           MOVEA.L     A5,A1
       | 1006  2C6C  0000-XX.2                MOVEA.L     _IntuitionBase(A4),A6
       | 100A  95CA                           SUBA.L      A2,A2
       | 100C  700B                           MOVEQ       #0B,D0
       | 100E  7400                           MOVEQ       #00,D2
       | 1010  283C 0000 FFFF                 MOVE.L      #0000FFFF,D4
       | 1016  7A01                           MOVEQ       #01,D5
       | 1018  4EAE FE2C                      JSR         FE2C(A6)
       | 101C  4CDF 0030                      MOVEM.L     (A7)+,D4-D5
; 638: 	}
; 639: 
; 640: 	RefreshGList(g, window, NULL, 1);
       | 1020  204B                           MOVEA.L     A3,A0
       | 1022  224D                           MOVEA.L     A5,A1
       | 1024  2C6C  0000-XX.2                MOVEA.L     _IntuitionBase(A4),A6
       | 1028  95CA                           SUBA.L      A2,A2
       | 102A  7001                           MOVEQ       #01,D0
       | 102C  4EAE FE50                      JSR         FE50(A6)
; 641: }
       | 1030  4CDF 7CFC                      MOVEM.L     (A7)+,D2-D7/A2-A6
       | 1034  504F                           ADDQ.W      #8,A7
       | 1036  4E75                           RTS
; 642: 
; 643: /******** SetPropSlider() ********/
; 644: 
; 645: void __saveds __asm LIBUA_SetPropSlider(register __a0	struct Window *window,
; 646: 																				register __a1	struct Gadget *g,
; 647: 																				register __d0	ULONG numEntries,
; 648: 																				register __d1	ULONG numDisplay,
; 649: 																				register __d2	LONG topEntry)
; 650: {
       | 1038  9EFC 000C                      SUBA.W      #000C,A7
       | 103C  48E7 3F3E                      MOVEM.L     D2-D7/A2-A6,-(A7)
       | 1040  2A02                           MOVE.L      D2,D5
       | 1042  2C01                           MOVE.L      D1,D6
       | 1044  2E00                           MOVE.L      D0,D7
       | 1046  2649                           MOVEA.L     A1,A3
       | 1048  2A48                           MOVEA.L     A0,A5
       | 104A  49EE  0000-XX.2                LEA         _LinkerDB(A6),A4
; 651: struct PropInfo *p;
; 652: ULONG f1,f2;
; 653: 
; 654: 	if (numEntries<=0)
       | 104E  2F4E 002C                      MOVE.L      A6,002C(A7)
       | 1052  7000                           MOVEQ       #00,D0
       | 1054  BE80                           CMP.L       D0,D7
       | 1056  622A                           BHI.B       1082
; 655: 	{
; 656: 		NewModifyProp(g, window, NULL, AUTOKNOB|FREEVERT|PROPBORDERLESS,
; 657: 									NULL, NULL, MAXBODY, MAXBODY, 1L);
       | 1058  48E7 0C00                      MOVEM.L     D4-D5,-(A7)
       | 105C  204B                           MOVEA.L     A3,A0
       | 105E  224D                           MOVEA.L     A5,A1
       | 1060  2C6C  0000-XX.2                MOVEA.L     _IntuitionBase(A4),A6
       | 1064  95CA                           SUBA.L      A2,A2
       | 1066  700D                           MOVEQ       #0D,D0
       | 1068  7200                           MOVEQ       #00,D1
       | 106A  2401                           MOVE.L      D1,D2
       | 106C  263C 0000 FFFF                 MOVE.L      #0000FFFF,D3
       | 1072  2803                           MOVE.L      D3,D4
       | 1074  7A01                           MOVEQ       #01,D5
       | 1076  4EAE FE2C                      JSR         FE2C(A6)
       | 107A  4CDF 0030                      MOVEM.L     (A7)+,D4-D5
; 658: 		return;
       | 107E  6000 00C0                      BRA.W       1140
; 659: 	}
; 660: 
; 661: 	p = (struct PropInfo *)g->SpecialInfo;
       | 1082  2F6B 0022 0034                 MOVE.L      0022(A3),0034(A7)
; 662: 
; 663: 	if (numEntries > numDisplay)
       | 1088  BE86                           CMP.L       D6,D7
       | 108A  2C6F 002C                      MOVEA.L     002C(A7),A6
       | 108E  637A                           BLS.B       110A
; 664: 	{
; 665: 		if ( topEntry >= (numEntries-numDisplay))
       | 1090  2007                           MOVE.L      D7,D0
       | 1092  9086                           SUB.L       D6,D0
       | 1094  BA80                           CMP.L       D0,D5
       | 1096  6508                           BCS.B       10A0
; 666: 			f1 = MAXBODY;
       | 1098  283C 0000 FFFF                 MOVE.L      #0000FFFF,D4
       | 109E  6014                           BRA.B       10B4
; 667: 		else
; 668: 			f1 = (MAXBODY*topEntry+(numEntries-numDisplay)) / (numEntries-numDisplay);
       | 10A0  2005                           MOVE.L      D5,D0
       | 10A2  4840                           SWAP        D0
       | 10A4  4240                           CLR.W       D0
       | 10A6  9085                           SUB.L       D5,D0
       | 10A8  2207                           MOVE.L      D7,D1
       | 10AA  9286                           SUB.L       D6,D1
       | 10AC  D081                           ADD.L       D1,D0
       | 10AE  4EBA  0000-XX.1                JSR         __CXD22(PC)
       | 10B2  2800                           MOVE.L      D0,D4
; 669: 
; 670: 		f2 = MAXBODY * ( (numDisplay*MAXBODY)/numEntries );
       | 10B4  2006                           MOVE.L      D6,D0
       | 10B6  4840                           SWAP        D0
       | 10B8  4240                           CLR.W       D0
       | 10BA  9086                           SUB.L       D6,D0
       | 10BC  2207                           MOVE.L      D7,D1
       | 10BE  4EBA  0000-XX.1                JSR         __CXD22(PC)
       | 10C2  2200                           MOVE.L      D0,D1
       | 10C4  4841                           SWAP        D1
       | 10C6  4241                           CLR.W       D1
       | 10C8  9280                           SUB.L       D0,D1
; 671: 		f2 /= MAXBODY;
       | 10CA  2001                           MOVE.L      D1,D0
       | 10CC  2F41 0030                      MOVE.L      D1,0030(A7)
       | 10D0  223C 0000 FFFF                 MOVE.L      #0000FFFF,D1
       | 10D6  4EBA  0000-XX.1                JSR         __CXD22(PC)
; 672: 
; 673: 		NewModifyProp(g, window, NULL, AUTOKNOB|FREEVERT|PROPBORDERLESS,
; 674: 									0L, f1, MAXBODY, f2, 1L);
       | 10DA  2F40 0030                      MOVE.L      D0,0030(A7)
       | 10DE  48E7 0C00                      MOVEM.L     D4-D5,-(A7)
       | 10E2  2404                           MOVE.L      D4,D2
       | 10E4  2800                           MOVE.L      D0,D4
       | 10E6  204B                           MOVEA.L     A3,A0
       | 10E8  224D                           MOVEA.L     A5,A1
       | 10EA  2C6C  0000-XX.2                MOVEA.L     _IntuitionBase(A4),A6
       | 10EE  95CA                           SUBA.L      A2,A2
       | 10F0  700D                           MOVEQ       #0D,D0
       | 10F2  7200                           MOVEQ       #00,D1
       | 10F4  263C 0000 FFFF                 MOVE.L      #0000FFFF,D3
       | 10FA  7A01                           MOVEQ       #01,D5
       | 10FC  4EAE FE2C                      JSR         FE2C(A6)
       | 1100  4CDF 0030                      MOVEM.L     (A7)+,D4-D5
       | 1104  2C6F 002C                      MOVEA.L     002C(A7),A6
       | 1108  6026                           BRA.B       1130
; 675: 	}
; 676: 	else
; 677: 	{
; 678: 		NewModifyProp(g, window, NULL, AUTOKNOB|FREEVERT|PROPBORDERLESS,
; 679: 									NULL, NULL, MAXBODY, MAXBODY, 1L);
       | 110A  48E7 0C00                      MOVEM.L     D4-D5,-(A7)
       | 110E  204B                           MOVEA.L     A3,A0
       | 1110  224D                           MOVEA.L     A5,A1
       | 1112  2C6C  0000-XX.2                MOVEA.L     _IntuitionBase(A4),A6
       | 1116  95CA                           SUBA.L      A2,A2
       | 1118  700D                           MOVEQ       #0D,D0
       | 111A  7200                           MOVEQ       #00,D1
       | 111C  2401                           MOVE.L      D1,D2
       | 111E  263C 0000 FFFF                 MOVE.L      #0000FFFF,D3
       | 1124  2803                           MOVE.L      D3,D4
       | 1126  7A01                           MOVEQ       #01,D5
       | 1128  4EAE FE2C                      JSR         FE2C(A6)
       | 112C  4CDF 0030                      MOVEM.L     (A7)+,D4-D5
; 680: 	}
; 681: 
; 682: 	RefreshGList(g, window, NULL, 1);
       | 1130  204B                           MOVEA.L     A3,A0
       | 1132  224D                           MOVEA.L     A5,A1
       | 1134  2C6C  0000-XX.2                MOVEA.L     _IntuitionBase(A4),A6
       | 1138  95CA                           SUBA.L      A2,A2
       | 113A  7001                           MOVEQ       #01,D0
       | 113C  4EAE FE50                      JSR         FE50(A6)
; 683: }
       | 1140  4CDF 7CFC                      MOVEM.L     (A7)+,D2-D7/A2-A6
       | 1144  DEFC 000C                      ADDA.W      #000C,A7
       | 1148  4E75                           RTS
; 684: 
; 685: /******** SetHorizPropSlider() ********/
; 686: 
; 687: void __saveds __asm LIBUA_SetHorizPropSlider(	register __a0 struct Window *window,
; 688: 																							register __a1 struct Gadget *g,
; 689: 																							register __d0	ULONG numEntries,
; 690: 																							register __d1	ULONG numDisplay,
; 691: 																							register __d2	LONG topEntry)
; 692: {
       | 114A  9EFC 000C                      SUBA.W      #000C,A7
       | 114E  48E7 3F3E                      MOVEM.L     D2-D7/A2-A6,-(A7)
       | 1152  2A02                           MOVE.L      D2,D5
       | 1154  2C01                           MOVE.L      D1,D6
       | 1156  2E00                           MOVE.L      D0,D7
       | 1158  2649                           MOVEA.L     A1,A3
       | 115A  2A48                           MOVEA.L     A0,A5
       | 115C  49EE  0000-XX.2                LEA         _LinkerDB(A6),A4
; 693: struct PropInfo *p;
; 694: ULONG f1,f2;
; 695: 
; 696: 	if (numEntries<=0)
       | 1160  2F4E 002C                      MOVE.L      A6,002C(A7)
       | 1164  7000                           MOVEQ       #00,D0
       | 1166  BE80                           CMP.L       D0,D7
       | 1168  622A                           BHI.B       1194
; 697: 	{
; 698: 		NewModifyProp(g, window, NULL, AUTOKNOB|FREEHORIZ|PROPBORDERLESS,
; 699: 									MAXBODY, MAXBODY, NULL, NULL, 1L);
       | 116A  48E7 0C00                      MOVEM.L     D4-D5,-(A7)
       | 116E  204B                           MOVEA.L     A3,A0
       | 1170  224D                           MOVEA.L     A5,A1
       | 1172  2C6C  0000-XX.2                MOVEA.L     _IntuitionBase(A4),A6
       | 1176  95CA                           SUBA.L      A2,A2
       | 1178  700B                           MOVEQ       #0B,D0
       | 117A  223C 0000 FFFF                 MOVE.L      #0000FFFF,D1
       | 1180  2401                           MOVE.L      D1,D2
       | 1182  7600                           MOVEQ       #00,D3
       | 1184  2803                           MOVE.L      D3,D4
       | 1186  7A01                           MOVEQ       #01,D5
       | 1188  4EAE FE2C                      JSR         FE2C(A6)
       | 118C  4CDF 0030                      MOVEM.L     (A7)+,D4-D5
; 700: 		return;
       | 1190  6000 00C0                      BRA.W       1252
; 701: 	}
; 702: 
; 703: 	p = (struct PropInfo *)g->SpecialInfo;
       | 1194  2F6B 0022 0034                 MOVE.L      0022(A3),0034(A7)
; 704: 
; 705: 	if (numEntries > numDisplay)
       | 119A  BE86                           CMP.L       D6,D7
       | 119C  2C6F 002C                      MOVEA.L     002C(A7),A6
       | 11A0  637A                           BLS.B       121C
; 706: 	{
; 707: 		if ( topEntry >= (numEntries-numDisplay))
       | 11A2  2007                           MOVE.L      D7,D0
       | 11A4  9086                           SUB.L       D6,D0
       | 11A6  BA80                           CMP.L       D0,D5
       | 11A8  6508                           BCS.B       11B2
; 708: 			f1 = MAXBODY;
       | 11AA  283C 0000 FFFF                 MOVE.L      #0000FFFF,D4
       | 11B0  6014                           BRA.B       11C6
; 709: 		else
; 710: 			f1 = (MAXBODY*topEntry+(numEntries-numDisplay)) / (numEntries-numDisplay);
       | 11B2  2005                           MOVE.L      D5,D0
       | 11B4  4840                           SWAP        D0
       | 11B6  4240                           CLR.W       D0
       | 11B8  9085                           SUB.L       D5,D0
       | 11BA  2207                           MOVE.L      D7,D1
       | 11BC  9286                           SUB.L       D6,D1
       | 11BE  D081                           ADD.L       D1,D0
       | 11C0  4EBA  0000-XX.1                JSR         __CXD22(PC)
       | 11C4  2800                           MOVE.L      D0,D4
; 711: 
; 712: 		f2 = MAXBODY * ( (numDisplay*MAXBODY)/numEntries );
       | 11C6  2006                           MOVE.L      D6,D0
       | 11C8  4840                           SWAP        D0
       | 11CA  4240                           CLR.W       D0
       | 11CC  9086                           SUB.L       D6,D0
       | 11CE  2207                           MOVE.L      D7,D1
       | 11D0  4EBA  0000-XX.1                JSR         __CXD22(PC)
       | 11D4  2200                           MOVE.L      D0,D1
       | 11D6  4841                           SWAP        D1
       | 11D8  4241                           CLR.W       D1
       | 11DA  9280                           SUB.L       D0,D1
; 713: 		f2 /= MAXBODY;
       | 11DC  2001                           MOVE.L      D1,D0
       | 11DE  2F41 0030                      MOVE.L      D1,0030(A7)
       | 11E2  223C 0000 FFFF                 MOVE.L      #0000FFFF,D1
       | 11E8  4EBA  0000-XX.1                JSR         __CXD22(PC)
; 714: 
; 715: 		NewModifyProp(g, window, NULL, AUTOKNOB|FREEHORIZ|PROPBORDERLESS,
; 716: 									f1, 0L, f2, MAXBODY, 1L);
       | 11EC  2F40 0030                      MOVE.L      D0,0030(A7)
       | 11F0  48E7 0C00                      MOVEM.L     D4-D5,-(A7)
       | 11F4  2204                           MOVE.L      D4,D1
       | 11F6  2600                           MOVE.L      D0,D3
       | 11F8  204B                           MOVEA.L     A3,A0
       | 11FA  224D                           MOVEA.L     A5,A1
       | 11FC  2C6C  0000-XX.2                MOVEA.L     _IntuitionBase(A4),A6
       | 1200  95CA                           SUBA.L      A2,A2
       | 1202  700B                           MOVEQ       #0B,D0
       | 1204  7400                           MOVEQ       #00,D2
       | 1206  283C 0000 FFFF                 MOVE.L      #0000FFFF,D4
       | 120C  7A01                           MOVEQ       #01,D5
       | 120E  4EAE FE2C                      JSR         FE2C(A6)
       | 1212  4CDF 0030                      MOVEM.L     (A7)+,D4-D5
       | 1216  2C6F 002C                      MOVEA.L     002C(A7),A6
       | 121A  6026                           BRA.B       1242
; 717: 	}
; 718: 	else
; 719: 	{
; 720: 		NewModifyProp(g, window, NULL, AUTOKNOB|FREEHORIZ|PROPBORDERLESS,
; 721: 									MAXBODY, MAXBODY, 0L, 0L, 1L);
       | 121C  48E7 0C00                      MOVEM.L     D4-D5,-(A7)
       | 1220  204B                           MOVEA.L     A3,A0
       | 1222  224D                           MOVEA.L     A5,A1
       | 1224  2C6C  0000-XX.2                MOVEA.L     _IntuitionBase(A4),A6
       | 1228  95CA                           SUBA.L      A2,A2
       | 122A  700B                           MOVEQ       #0B,D0
       | 122C  223C 0000 FFFF                 MOVE.L      #0000FFFF,D1
       | 1232  2401                           MOVE.L      D1,D2
       | 1234  7600                           MOVEQ       #00,D3
       | 1236  2803                           MOVE.L      D3,D4
       | 1238  7A01                           MOVEQ       #01,D5
       | 123A  4EAE FE2C                      JSR         FE2C(A6)
       | 123E  4CDF 0030                      MOVEM.L     (A7)+,D4-D5
; 722: 	}
; 723: 
; 724: 	RefreshGList(g, window, NULL, 1);
       | 1242  204B                           MOVEA.L     A3,A0
       | 1244  224D                           MOVEA.L     A5,A1
       | 1246  2C6C  0000-XX.2                MOVEA.L     _IntuitionBase(A4),A6
       | 124A  95CA                           SUBA.L      A2,A2
       | 124C  7001                           MOVEQ       #01,D0
       | 124E  4EAE FE50                      JSR         FE50(A6)
; 725: }
       | 1252  4CDF 7CFC                      MOVEM.L     (A7)+,D2-D7/A2-A6
       | 1256  DEFC 000C                      ADDA.W      #000C,A7
       | 125A  4E75                           RTS
; 726: 
; 727: /******** SwitchFlagsOn() ********/
; 728: 
; 729: void __saveds __asm LIBUA_SwitchFlagsOn(	register __a0 struct Window *window,
; 730: 																					register __d0 ULONG flags )
; 731: {
       | 125C  594F                           SUBQ.W      #4,A7
       | 125E  48E7 010E                      MOVEM.L     D7/A4-A6,-(A7)
       | 1262  2E00                           MOVE.L      D0,D7
       | 1264  2A48                           MOVEA.L     A0,A5
       | 1266  49EE  0000-XX.2                LEA         _LinkerDB(A6),A4
; 732: 	Forbid();
       | 126A  2F4E 0010                      MOVE.L      A6,0010(A7)
       | 126E  2C6C  0000-XX.2                MOVEA.L     _SysBase(A4),A6
       | 1272  4EAE FF7C                      JSR         FF7C(A6)
; 733: 	window->IDCMPFlags |= flags;
       | 1276  8FAD 0052                      OR.L        D7,0052(A5)
; 734: 	if ( window->IDCMPFlags!=NULL )
       | 127A  2C6F 0010                      MOVEA.L     0010(A7),A6
       | 127E  670E                           BEQ.B       128E
; 735: 		ModifyIDCMP(window, window->IDCMPFlags);
       | 1280  204D                           MOVEA.L     A5,A0
       | 1282  2028 0052                      MOVE.L      0052(A0),D0
       | 1286  2C6C  0000-XX.2                MOVEA.L     _IntuitionBase(A4),A6
       | 128A  4EAE FF6A                      JSR         FF6A(A6)
; 736: 	Permit();
       | 128E  2C6C  0000-XX.2                MOVEA.L     _SysBase(A4),A6
       | 1292  4EAE FF76                      JSR         FF76(A6)
; 737: }
       | 1296  4CDF 7080                      MOVEM.L     (A7)+,D7/A4-A6
       | 129A  584F                           ADDQ.W      #4,A7
       | 129C  4E75                           RTS
; 738: 
; 739: /******** SwitchFlagsOff() ********/
; 740: 
; 741: void __saveds __asm LIBUA_SwitchFlagsOff(	register __a0 struct Window *window,
; 742: 																					register __d0 ULONG flags )
; 743: {
       | 129E  594F                           SUBQ.W      #4,A7
       | 12A0  48E7 010E                      MOVEM.L     D7/A4-A6,-(A7)
       | 12A4  2E00                           MOVE.L      D0,D7
       | 12A6  2A48                           MOVEA.L     A0,A5
       | 12A8  49EE  0000-XX.2                LEA         _LinkerDB(A6),A4
; 744: 	Forbid();
       | 12AC  2F4E 0010                      MOVE.L      A6,0010(A7)
       | 12B0  2C6C  0000-XX.2                MOVEA.L     _SysBase(A4),A6
       | 12B4  4EAE FF7C                      JSR         FF7C(A6)
; 745: 	window->IDCMPFlags &= ~flags;
       | 12B8  2007                           MOVE.L      D7,D0
       | 12BA  4680                           NOT.L       D0
       | 12BC  C1AD 0052                      AND.L       D0,0052(A5)
; 746: 	if ( window->IDCMPFlags!=NULL )
       | 12C0  2C6F 0010                      MOVEA.L     0010(A7),A6
       | 12C4  670E                           BEQ.B       12D4
; 747: 		ModifyIDCMP(window, window->IDCMPFlags);
       | 12C6  204D                           MOVEA.L     A5,A0
       | 12C8  2028 0052                      MOVE.L      0052(A0),D0
       | 12CC  2C6C  0000-XX.2                MOVEA.L     _IntuitionBase(A4),A6
       | 12D0  4EAE FF6A                      JSR         FF6A(A6)
; 748: 	Permit();
       | 12D4  2C6C  0000-XX.2                MOVEA.L     _SysBase(A4),A6
       | 12D8  4EAE FF76                      JSR         FF76(A6)
; 749: }
       | 12DC  4CDF 7080                      MOVEM.L     (A7)+,D7/A4-A6
       | 12E0  584F                           ADDQ.W      #4,A7
       | 12E2  4E75                           RTS
; 750: 
; 751: /*******************************************************************/
; 752: /*
; 753:  *   PRIVATE FUNCTIONS
; 754:  *
; 755:  *******************************************************************/
; 756: 
; 757: /******** PrintStdListLine() ********/
; 758: 
; 759: void PrintStdListLine(struct Window *window, struct GadgetRecord *GR,
; 760: 											int x1, int y1, int x2, int y2,
; 761: 											STRPTR oristr)
; 762: {
       | 12E4  9EFC 0108                      SUBA.W      #0108,A7
       | 12E8  48E7 3716                      MOVEM.L     D2-D3/D5-D7/A3/A5-A6,-(A7)
       | 12EC  2A2F 013C                      MOVE.L      013C(A7),D5
       | 12F0  2C2F 0138                      MOVE.L      0138(A7),D6
       | 12F4  2E2F 0134                      MOVE.L      0134(A7),D7
       | 12F8  266F 0130                      MOVEA.L     0130(A7),A3
       | 12FC  2A6F 012C                      MOVEA.L     012C(A7),A5
; 763: TEXT str[256];
; 764: int y;
; 765: 
; 766: 	stccpy(str, oristr, 256); //SAS function
       | 1300  4878 0100                      PEA         0100
       | 1304  2F2F 0148                      MOVE.L      0148(A7),-(A7)
       | 1308  486F 0030                      PEA         0030(A7)
       | 130C  2F4E 002C                      MOVE.L      A6,002C(A7)
       | 1310  4EBA  0000-XX.1                JSR         _stccpy(PC)
; 767: 
; 768: 	my_SetAPen(window, ChoosePen(window,GR,AREA_PEN));
       | 1314  4878 0003                      PEA         0003
       | 1318  2F0B                           MOVE.L      A3,-(A7)
       | 131A  2F0D                           MOVE.L      A5,-(A7)
       | 131C  4EBA  0000-XX.1                JSR         _ChoosePen(PC)
       | 1320  2E80                           MOVE.L      D0,(A7)
       | 1322  2F0D                           MOVE.L      A5,-(A7)
       | 1324  4EBA  0000-XX.1                JSR         _my_SetAPen(PC)
; 769: 
; 770: 	RectFill(window->RPort, x1+2, y1+2, x2-2, y2);
       | 1328  2007                           MOVE.L      D7,D0
       | 132A  5480                           ADDQ.L      #2,D0
       | 132C  2206                           MOVE.L      D6,D1
       | 132E  5481                           ADDQ.L      #2,D1
       | 1330  2405                           MOVE.L      D5,D2
       | 1332  5582                           SUBQ.L      #2,D2
       | 1334  226D 0032                      MOVEA.L     0032(A5),A1
       | 1338  262F 015C                      MOVE.L      015C(A7),D3
       | 133C  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 1340  4EAE FECE                      JSR         FECE(A6)
; 771: 
; 772: 	LIBUA_ShortenString(window->RPort, str, (x2-x1)-20);
       | 1344  2005                           MOVE.L      D5,D0
       | 1346  9087                           SUB.L       D7,D0
       | 1348  7214                           MOVEQ       #14,D1
       | 134A  9081                           SUB.L       D1,D0
       | 134C  206D 0032                      MOVEA.L     0032(A5),A0
       | 1350  43EF 0044                      LEA         0044(A7),A1
       | 1354  2C6F 003C                      MOVEA.L     003C(A7),A6
       | 1358  6100 F62C                      BSR.W       0986
; 773: 
; 774: 	y = y2 - y1 - window->RPort->TxHeight;
       | 135C  9686                           SUB.L       D6,D3
       | 135E  206D 0032                      MOVEA.L     0032(A5),A0
       | 1362  7000                           MOVEQ       #00,D0
       | 1364  3028 003A                      MOVE.W      003A(A0),D0
       | 1368  9680                           SUB.L       D0,D3
; 775: 	y = y/2;
       | 136A  2F43 0040                      MOVE.L      D3,0040(A7)
       | 136E  6A02                           BPL.B       1372
       | 1370  5283                           ADDQ.L      #1,D3
       | 1372  E283                           ASR.L       #1,D3
; 776: 	y += (y1 + window->RPort->TxBaseline + 2);
       | 1374  7000                           MOVEQ       #00,D0
       | 1376  3028 003E                      MOVE.W      003E(A0),D0
       | 137A  2206                           MOVE.L      D6,D1
       | 137C  D280                           ADD.L       D0,D1
       | 137E  5481                           ADDQ.L      #2,D1
       | 1380  2F43 0040                      MOVE.L      D3,0040(A7)
       | 1384  D681                           ADD.L       D1,D3
; 777: 
; 778: 	my_SetAPen(window, ChooseTextPen(window,GR));
       | 1386  2E8B                           MOVE.L      A3,(A7)
       | 1388  2F0D                           MOVE.L      A5,-(A7)
       | 138A  2F43 0044                      MOVE.L      D3,0044(A7)
       | 138E  4EBA  0000-XX.1                JSR         _ChooseTextPen(PC)
       | 1392  2E80                           MOVE.L      D0,(A7)
       | 1394  2F0D                           MOVE.L      A5,-(A7)
       | 1396  4EBA  0000-XX.1                JSR         _my_SetAPen(PC)
; 779: 
; 780: 	Move(window->RPort, (LONG)x1+4, (LONG)y);
       | 139A  2007                           MOVE.L      D7,D0
       | 139C  5880                           ADDQ.L      #4,D0
       | 139E  2203                           MOVE.L      D3,D1
       | 13A0  226D 0032                      MOVEA.L     0032(A5),A1
       | 13A4  2C6C  0000-XX.2                MOVEA.L     _GfxBase(A4),A6
       | 13A8  4EAE FF10                      JSR         FF10(A6)
; 781: 	Text(window->RPort, str, strlen(str));
       | 13AC  41EF 004C                      LEA         004C(A7),A0
       | 13B0  2248                           MOVEA.L     A0,A1
       | 13B2  4A19                           TST.B       (A1)+
       | 13B4  66FC                           BNE.B       13B2
       | 13B6  5389                           SUBQ.L      #1,A1
       | 13B8  93C8                           SUBA.L      A0,A1
       | 13BA  2009                           MOVE.L      A1,D0
       | 13BC  226D 0032                      MOVEA.L     0032(A5),A1
       | 13C0  4EAE FFC4                      JSR         FFC4(A6)
; 782: }
       | 13C4  4FEF 0024                      LEA         0024(A7),A7
       | 13C8  4CDF 68EC                      MOVEM.L     (A7)+,D2-D3/D5-D7/A3/A5-A6
       | 13CC  DEFC 0108                      ADDA.W      #0108,A7
       | 13D0  4E75                           RTS

SECTION 01 "__MERGED" 00000014 BYTES
0000 00 00 00 00 55 6E 74 69 74 6C 65 64 00 00 20 27 ....Untitled.. '
0010 3A 2F 00 00 :/..
