
;--- planartochunky.a ---------------------------------------------------+
; MediaPoint Fast Assembly Tools. Code written by B.O.M.B. AudioVisual   |
; Entertainment in order of 1001 Software Development.                   |
;------------------------------------------------------------------------+
; All programming by:                                                    |
;    Pascal Eeftinck, Bits On My Byte AudioVisual Entertainment          |
;------------------------------------------------------------------------+

; $VER: mediapoint/pascal/toolslib/planartochunky.a 01.101 (02.18.94)


	TTL	PlanarToChunky.a
	IDNT	PlanarToChunky.a


	INCDIR	"include:"

	INCLUDE	"exec/types.i"
	INCLUDE	"exec/funcdef.i"
	INCLUDE	"exec/memory.i"
	INCLUDE	"exec/exec_lib.i"
	INCLUDE	"exec/libraries.i"
	
	INCDIR	"pascal:include/"

	INCLUDE	"toolslib.i"


	XDEF	_PlanarToChunky
	XDEF	_PlanarToChunky24



	SECTION	PlanarToChunky,CODE


Gtab	dc.l	GetChunky1
	dc.l	GetChunky2
	dc.l	GetChunky3
	dc.l	GetChunky4
	dc.l	GetChunky5
	dc.l	GetChunky6
	dc.l	GetChunky7
	dc.l	GetChunky8

;--------------------------------------------------------------------------
; func: VOID PlanarToChunky( struct BitMap24 *srcBM (a0), unsigned char
;    *ChunkyPixels (a1), srcX (d0:16), srcY (d1:16), width (d6:16) );
;--------------------------------------------------------------------------
; Warning: This function may use extra bytes at the front of the chunky
; buffer, so be sure to have 8 bytes extra at the front of the buffer.
; When srcX == 0, ((width + 7) & 7) bytes will do.
;--------------------------------------------------------------------------

_PlanarToChunky

	movem.l	d2-d7/a2-a6,-(sp)

	moveq.l	#0,d2
	move.b	bm24_Depth(a0),d2
	subq.w	#1,d2
	andi.w	#$0007,d2
	lsl.w	#2,d2
	movea.l	Gtab(pc,d2.w),a6
	cmpi.w	#12,d2
	bhi	.planes8



.planes4	move.w	d0,d2
	andi.w	#$0007,d2
	suba.w	d2,a1
	add.w	d2,d6
	addq.w	#7,d6
	lsr.w	#3,d6
	subq.w	#1,d6

	move.w	d1,d4
	mulu.w	bm24_Modulo(a0),d4
	lsr.w	#3,d0
	andi.l	#$FFFF,d0
	add.l	d0,d4

	movea.l	bm24_Planes+(0*4)(a0),a2
	movea.l	bm24_Planes+(1*4)(a0),a3
	movea.l	bm24_Planes+(2*4)(a0),a4
	movea.l	bm24_Planes+(3*4)(a0),a5
	adda.l	d4,a2
	adda.l	d4,a3
	adda.l	d4,a4
	adda.l	d4,a5

	moveq.l	#0,d0
	moveq.l	#0,d2

; D0 = a2b2c2d2e2f2g2h2 a0b0c0d0e0f0g0h0
; D2 = a3b3c3d3e3f3g3h3 a1b1c1d1e1f1g1h1

.loopX4	jsr	(a6)		; regs : D0 (6420) D2 (7531) d4 a0 A2

	move.w	d0,d1
	and.w	#$aaaa,d0
	and.w	#$5555,d1

; D0 = a2--c2--e2--g2-- a0--c0--e0--g0--
; D1 = --b2--d2--f2--h2 --b0--d0--f0--h0

	move.w	d2,d3
	and.w	#$aaaa,d3
	and.w	#$5555,d2

; D3 = a3--c3--e3--g3-- a1--c1--e1--g1--
; D2 = --b3--d3--f3--h3 --b1--d1--f1--h1

	lsr.w	#1,d0
	add.w	d2,d2

; D0 = --a2--c2--e2--g2 --a0--c0--e0--g0
; D2 = b3--d3--f3--h3-- b1--d1--f1--h1--

	or.w	d3,d0
	or.w	d1,d2

; D0 = a3a2c3c2e3e2g3g2 a1a0c1c0e1e0g1g0
; D2 = b3b2d3d2f3f2h3h2 b1b0d1d0f1f0h1h0

	move.w	d0,d3
	andi.w	#$00ff,d0
	andi.w	#$ff00,d3

; D0 = ---------------- a1a0c1c0e1e0g1g0
; D3 = a3a2c3c2e3e2g3g2 ----------------

	move.w	d2,d1
	andi.w	#$00ff,d2
	andi.w	#$ff00,d1

; D2 = ---------------- b1b0d1d0f1f0h1h0
; D1 = b3b2d3d2f3f2h3h2 ---------------

	lsr.w	#8,d3
	lsl.w	#8,d2

; D3 = ---------------- a3a2c3c2e3e2g3g2
; D2 = b1b0d1d0f1f0h1h0 ----------------

	or.w	d2,d0
	or.w	d3,d1

; D0 = b1b0d1d0f1f0h1h0 a1a0c1c0e1e0g1g0
; D1 = b3b2d3d2f3f2h3h2 a3a2c3c2e3e2g3g2

	move.w	d0,d2
	andi.w	#$cccc,d0
	andi.w	#$3333,d2

; D0 = b1b0----f1f0---- a1a0----e1e0----
; D2 = ----d1d0----h1h0 ----c1c0----g1g0

	move.w	d1,d3
	andi.w	#$3333,d1
	andi.w	#$cccc,d3

; D1 = ----d3d2----h3h2 ----c3c2----g3g2
; D3 = b3b2----f3f2---- a3a2----e3e2----

	lsr.l	#2,d0
	lsl.l	#2,d1

; D0 = ----b1b0----f1f0 ----a1a0----e1e0
; D1 = d3d2----h3h2---- c3c2----g3g2----

	or.w	d3,d0
	or.w	d2,d1

; D0 = b3b2b1b0.f3f2f1f0 a3a2a1a0.e3e2e1e0
; D1 = d3d2d1d0.h3h2h1h0 c3c2c1c0.g3g2g1g0

	rol.w	#4,d0
	rol.w	#4,d1

; D0 = f3f2f1f0.a3a2a1a0 e3e2e1e0.b3b2b1b0
; D1 = h3h2h1h0.c3c2c1c0 g3g2g1g0.d3d2d1d0

	swap.w	d0
	move.w	d1,d0

; D0 = f3f2f1f0.a3a2a1a0 e3e2e1e0.b3b2b1b0 h3h2h1h0.c3c2c1c0 g3g2g1g0.d3d2d1d0 

	rol.w	#4,d0

; D0 = f3f2f1f0.a3a2a1a0 e3e2e1e0.b3b2b1b0 c3c2c1c0.g3g2g1g0 d3d2d1d0.h3h2h1h0

	swap.w	d0

; D0 = c3c2c1c0.g3g2g1g0 d3d2d1d0.h3h2h1h0 f3f2f1f0.a3a2a1a0 e3e2e1e0.b3b2b1b0

	rol.w	#4,d0

; D0 = c3c2c1c0.g3g2g1g0 d3d2d1d0.h3h2h1h0 a3a2a1a0.e3e2e1e0 b3b2b1b0.f3f2f1f0

	swap.w	d0

; D0 = a3a2a1a0.e3e2e1e0 b3b2b1b0.f3f2f1f0  c3c2c1c0.g3g2g1g0 d3d2d1d0.h3h2h1h0 

	move.l	d0,d1
	lsr.l	#4,d0
	andi.l	#$0F0F0F0F,d0
	andi.l	#$0F0F0F0F,d1

; D0 = --------.a3a2a1a0 --------.b3b2b1b0 --------.c3c2c1c0 --------.d3d2d1d0
; D1 = --------.e3e2e1e0 --------.f3f2f1f0 --------.g3g2g1g0 --------.h3h2h1h0 

; D0 = abcd
; d1 = efgh

	move.l	a1,d2
	bclr.l	#0,d2
	beq	.even4

.odd4	movea.l	d2,a1
	move.b	d1,8(a1)
	move.b	d0,d1
	ror.l	#8,d1
	move.b	0(a1),d0
	ror.l	#8,d0
	move.l	d0,(a1)+
	move.l	d1,(a1)+
	addq.w	#1,a1

	moveq.l	#0,d0
	moveq.l	#0,d2

	addq.l	#1,d4
	dbra	d6,.loopX4
	bra	.exit

.even4	move.l	d0,(a1)+
	move.l	d1,(a1)+

	moveq.l	#0,d0
	moveq.l	#0,d2

	addq.l	#1,d4
	dbra	d6,.loopX4
	bra	.exit







.planes8	move.w	d0,d2
	andi.w	#$0007,d2
	suba.w	d2,a1
	add.w	d2,d6
	addq.w	#7,d6
	lsr.w	#3,d6
	subq.w	#1,d6

	move.w	d1,d4
	mulu.w	bm24_Modulo(a0),d4
	lsr.w	#3,d0
	andi.l	#$FFFF,d0
	add.l	d0,d4

	moveq.l	#0,d0
	moveq.l	#0,d2

.loopX	jsr	(a6)		; regs : D0 (6420) D2 (7531) d4 a0 A2

; D0 = a6b6c6d6e6f6g6h6 a4b4c4d4e4f4g4h4 a2b2c2d2e2f2g2h2 a0b0c0d0e0f0g0h0
; D2 = a7b7c7d7e7f7g7h7 a5b5c5d5e5f5g5h5 a3b3c3d3e3f3g3h3 a1b1c1d1e1f1g1h1

	move.l	d0,d1
	and.l	#$aaaaaaaa,d0
	and.l	#$55555555,d1

; D0 = a6--c6--e6--g6-- a4--c4--e4--g4-- a2--c2--e2--g2-- a0--c0--e0--g0--
; D1 = --b6--d6--f6--h6 --b4--d4--f4--h4 --b2--d2--f2--h2 --b0--d0--f0--h0

	move.l	d2,d3
	and.l	#$aaaaaaaa,d3
	and.l	#$55555555,d2

; D3 = a7--c7--e7--g7-- a5--c5--e5--g5-- a3--c3--e3--g3-- a1--c1--e1--g1--
; D2 = --b7--d7--f7--h7 --b5--d5--f5--h5 --b3--d3--f3--h3 --b1--d1--f1--h1

	lsr.l	#1,d0
	add.l	d2,d2

; D0 = --a6--c6--e6--g6 --a4--c4--e4--g4 --a2--c2--e2--g2 --a0--c0--e0--g0
; D2 = b7--d7--f7--h7-- b5--d5--f5--h5-- b3--d3--f3--h3-- b1--d1--f1--h1--

	or.l	d3,d0
	or.l	d1,d2

; D0 = a7a6c7c6e7e6g7g6 a5a4c5c4e5e4g5g4 a3a2c3c2e3e2g3g2 a1a0c1c0e1e0g1g0
; D2 = b7b6d7d6f7f6h7h6 b5b4d5d4f5f4h5h4 b3b2d3d2f3f2h3h2 b1b0d1d0f1f0h1h0

	move.l	d0,d3
	andi.l	#$00ff00ff,d0
	andi.l	#$ff00ff00,d3

; D0 = ---------------- a5a4c5c4e5e4g5g4 ---------------- a1a0c1c0e1e0g1g0
; D3 = a7a6c7c6e7e6g7g6 ---------------- a3a2c3c2e3e2g3g2 ----------------

	move.l	d2,d1
	andi.l	#$00ff00ff,d2
	andi.l	#$ff00ff00,d1

; D2 = ---------------- b5b4d5d4f5f4h5h4 ---------------- b1b0d1d0f1f0h1h0
; D1 = b7b6d7d6f7f6h7h6 ---------------- b3b2d3d2f3f2h3h2 ---------------

	lsr.l	#8,d3
	lsl.l	#8,d2

; D3 = ---------------- a7a6c7c6e7e6g7g6 ---------------- a3a2c3c2e3e2g3g2
; D2 = b5b4d5d4f5f4h5h4 ---------------- b1b0d1d0f1f0h1h0 ----------------

	or.l	d2,d0
	or.l	d3,d1

; D0 = b5b4d5d4f5f4h5h4 a5a4c5c4e5e4g5g4 b1b0d1d0f1f0h1h0 a1a0c1c0e1e0g1g0
; D1 = b7b6d7d6f7f6h7h6 a7a6c7c6e7e6g7g6 b3b2d3d2f3f2h3h2 a3a2c3c2e3e2g3g2

	move.l	d0,d2
	andi.l	#$cccccccc,d0
	andi.l	#$33333333,d2

; D0 = b5b4----f5f4---- a5a4----e5e4---- b1b0----f1f0---- a1a0----e1e0----
; D2 = ----d5d4----h5h4 ----c5c4----g5g4 ----d1d0----h1h0 ----c1c0----g1g0

	move.l	d1,d3
	andi.l	#$33333333,d1
	andi.l	#$cccccccc,d3

; D1 = ----d7d6----h7h6 ----c7c6----g7g6 ----d3d2----h3h2 ----c3c2----g3g2
; D3 = b7b6----f7f6---- a7a6----e7e6---- b3b2----f3f2---- a3a2----e3e2----

	lsr.l	#2,d0
	lsl.l	#2,d1

; D0 = ----b5b4----f5f4 ----a5a4----e5e4 ----b1b0----f1f0 ----a1a0----e1e0
; D1 = d7d6----h7h6---- c7c6----g7g6---- d3d2----h3h2---- c3c2----g3g2----

	or.l	d3,d0
	or.l	d2,d1
		
; D0 = b7b6b5b4f7f6f5f4 a7a6a5a4e7e6e5e4 b3b2b1b0f3f2f1f0 a3a2a1a0e3e2e1e0
; D1 = d7d6d5d4h7h6h5h4 c7c6c5c4g7g6g5g4 d3d2d1d0h3h2h1h0 c3c2c1c0g3g2g1g0

	swap	d0

; D0 = b3b2b1b0f3f2f1f0 a3a2a1a0e3e2e1e0 b7b6b5b4f7f6f5f4 a7a6a5a4e7e6e5e4

	move.w	d0,d2
	move.w	d1,d0
	move.w	d2,d1
	
; D0 = b3b2b1b0f3f2f1f0 a3a2a1a0e3e2e1e0 d3d2d1d0h3h2h1h0 c3c2c1c0g3g2g1g0
; D1 = d7d6d5d4h7h6h5h4 c7c6c5c4g7g6g5g4 b7b6b5b4f7f6f5f4 a7a6a5a4e7e6e5e4

	swap	d0
	
; D0 = d3d2d1d0h3h2h1h0 c3c2c1c0g3g2g1g0 b3b2b1b0f3f2f1f0 a3a2a1a0e3e2e1e0

	move.l	d0,d3
	andi.l	#$0f0f0f0f,d3
	andi.l	#$f0f0f0f0,d0

; D3 = ----d1d0----h1h0 ----c1c0----g1g0 ----b1b0----f1f0 ----a1a0----e1e0
; D0 = d3d2----h3h2---- c3c2----g3g2---- b3b2----f3f2---- a3a2----e3e2----

	move.l	d1,d2
	andi.l	#$0f0f0f0f,d2
	andi.l	#$f0f0f0f0,d1

; D2 = ----d5d4----h5h4 ----c5c4----g5g4 ----b5b4----f5f4 ----a5a4----e5e4
; D1 = d7d6----h7h6---- c7c6----g7g6---- b7b6----f7f6---- a7a6----e7e6----

	lsr.l	#4,d0

; D0 = ----d3d2----h3h2 ----c3c2----g3g2 ----b3b2----f3f2 ----a3a2----e3e2

	or.l	d1,d0

; D0 = d7d6d3d2h7h6h3h2 c7c6c3c2g7g6g3g2 b7b6b3b2f7f6f3f2 a7a6a3a2e7e6e3e2

	lsl.l	#4,d2

; D2 = d5d4----h5h4---- c5c4----g5g4---- b5b4----f5f4---- a5a4----e5e4----

	or.l	d2,d3

; D3 = d5d4d1d0h5h4h1h0 c5c4c1c0g5g4g1g0 b5b4b1b0f5f4f1f0 a5a4a1a0e5e4e1e0
	
	ror.w	#8,d0

; D0 = d7d6d3d2h7h6h3h2 c7c6c3c2g7g6g3g2 a7a6a3a2e7e6e3e2 b7b6b3b2f7f6f3f2

	swap	d0

; D0 = a7a6a3a2e7e6e3e2 b7b6b3b2f7f6f3f2 d7d6d3d2h7h6h3h2 c7c6c3c2g7g6g3g2

	ror.w	#8,d0

; D0 = a7a6a3a2e7e6e3e2 b7b6b3b2f7f6f3f2 c7c6c3c2g7g6g3g2 d7d6d3d2h7h6h3h2

; D0 = abcd

	ror.w	#8,d3
	swap	d3
	ror.w	#8,d3

; d3 = efgh

	move.l	a1,d1
	bclr.l	#0,d1
	beq.b	.even

.odd	movea.l	d1,a1
	move.b	d3,8(a1)
	move.b	d0,d3
	ror.l	#8,d3
	move.b	0(a1),d0
	ror.l	#8,d0
	move.l	d0,(a1)+
	move.l	d3,(a1)+
	addq.w	#1,a1

	moveq.l	#0,d0
	moveq.l	#0,d2

	addq.l	#1,d4
	dbra	d6,.loopX
	bra	.exit

.even	move.l	d0,(a1)+
	move.l	d3,(a1)+

	moveq.l	#0,d0
	moveq.l	#0,d2

	addq.l	#1,d4
	dbra	d6,.loopX

.exit	movem.l	(sp)+,d2-d7/a2-a6
	rts



GetChunky8

	movea.l	bm24_Planes+(3*4)(a0),a2
	move.b	(a2,d4.l),d2	; plane 3	0003

	swap	d2		;		0300	

	movea.l	bm24_Planes+(7*4)(a0),a2
	move.b	(a2,d4.l),d2	; plane 7	0307

	rol.l	#8,d2		;		3070

	movea.l	bm24_Planes+(5*4)(a0),a2
	move.b	(a2,d4.l),d2	; plane 5	3075

	swap	d2		;		7530

	movea.l	bm24_Planes+(1*4)(a0),a2
	move.b	(a2,d4.l),d2	; plane 1	7531


	movea.l	bm24_Planes+(2*4)(a0),a2
	move.b	(a2,d4.l),d0	; plane 2	0002

	swap	d0		; 		0200

	movea.l	bm24_Planes+(6*4)(a0),a2
	move.b	(a2,d4.l),d0	; plane 6	0206

	rol.l	#8,d0		; 		2060

	movea.l	bm24_Planes+(4*4)(a0),a2
	move.b	(a2,d4.l),d0	; plane 4	2064

	swap	d0		; 		6420

	movea.l	bm24_Planes+(0*4)(a0),a2
	move.b	(a2,d4.l),d0	; plane 0 	6420
	rts



GetChunky7

	movea.l	bm24_Planes+(3*4)(a0),a2
	move.b	(a2,d4.l),d2	; plane 3	0003

	swap	d2		;		0300	
	rol.l	#8,d2		;		3070

	movea.l	bm24_Planes+(5*4)(a0),a2
	move.b	(a2,d4.l),d2	; plane 5	3075

	swap	d2		;		7530

	movea.l	bm24_Planes+(1*4)(a0),a2
	move.b	(a2,d4.l),d2	; plane 1	7531

	movea.l	bm24_Planes+(2*4)(a0),a2
	move.b	(a2,d4.l),d0	; plane 2	0002

	swap	d0		; 		0200

	movea.l	bm24_Planes+(6*4)(a0),a2
	move.b	(a2,d4.l),d0	; plane 6	0206

	rol.l	#8,d0		; 		2060

	movea.l	bm24_Planes+(4*4)(a0),a2
	move.b	(a2,d4.l),d0	; plane 4	2064

	swap	d0		; 		6420

	movea.l	bm24_Planes+(0*4)(a0),a2
	move.b	(a2,d4.l),d0	; plane 0 	6420
	rts



GetChunky6

	movea.l	bm24_Planes+(3*4)(a0),a2
	move.b	(a2,d4.l),d2	; plane 3	0003

	swap	d2		;		0300	
	rol.l	#8,d2		;		3070

	movea.l	bm24_Planes+(5*4)(a0),a2
	move.b	(a2,d4.l),d2	; plane 5	3075

	swap	d2		;		7530

	movea.l	bm24_Planes+(1*4)(a0),a2
	move.b	(a2,d4.l),d2	; plane 1	7531

	movea.l	bm24_Planes+(2*4)(a0),a2
	move.b	(a2,d4.l),d0	; plane 2	0002

	swap	d0		; 		0200
	rol.l	#8,d0		; 		2060

	movea.l	bm24_Planes+(4*4)(a0),a2
	move.b	(a2,d4.l),d0	; plane 4	2064

	swap	d0		; 		6420

	movea.l	bm24_Planes+(0*4)(a0),a2
	move.b	(a2,d4.l),d0	; plane 0 	6420
	rts



GetChunky5

	movea.l	bm24_Planes+(3*4)(a0),a2
	move.b	(a2,d4.l),d2	; plane 3	0003

	swap	d2		;		0300	
	rol.l	#8,d2		;		3070
	swap	d2		;		7530

	movea.l	bm24_Planes+(1*4)(a0),a2
	move.b	(a2,d4.l),d2	; plane 1	7531

	movea.l	bm24_Planes+(2*4)(a0),a2
	move.b	(a2,d4.l),d0	; plane 2	0002

	swap	d0		; 		0200
	rol.l	#8,d0		; 		2060

	movea.l	bm24_Planes+(4*4)(a0),a2
	move.b	(a2,d4.l),d0	; plane 4	2064

	swap	d0		; 		6420

	movea.l	bm24_Planes+(0*4)(a0),a2
	move.b	(a2,d4.l),d0	; plane 0 	6420
	rts



GetChunky4
	move.b	(a5)+,d2	; plane 3	0003

	swap	d2		;		0300	
	rol.l	#8,d2		;		3070
	swap	d2		;		7530

	move.b	(a3)+,d2	; plane 1	7531

	move.b	(a4)+,d0	; plane 2	0002

	swap	d0		; 		0200
	rol.l	#8,d0		; 		2060
	swap	d0		; 		6420

	move.b	(a2)+,d0	; plane 0 	6420
	rts



GetChunky3
	move.b	(a3)+,d2	; plane 1	7531
	move.b	(a4)+,d0	; plane 2	0002

	swap	d0		; 		0200
	rol.l	#8,d0		; 		2060
	swap	d0		; 		6420

	move.b	(a2)+,d0	; plane 0 	6420
	rts



GetChunky2
	move.b	(a3)+,d2	; plane 1	7531
	move.b	(a2)+,d0	; plane 0 	6420
	rts



GetChunky1
	move.b	(a2)+,d0	; plane 0 	6420
	rts






;--------------------------------------------------------------------------
; func: VOID PlanarToChunky24( struct BitMap24 *srcBM (a0), UBYTE
;	*RGBbytes (a1), srcX (d0:16), srcY (d1:16), width (d6:16) );
;--------------------------------------------------------------------------
; Description of this function.
;--------------------------------------------------------------------------

_PlanarToChunky24

	movem.l	d2-d7/a2-a6,-(sp)

	move.w	d0,d2
	andi.w	#$0007,d2
	add.w	d2,d6
	addq.w	#7,d6
	lsr.w	#3,d6
	subq.w	#1,d6
	subq.w	#1,d7

.loopY	movem.w	d0/d1/d6,-(sp)
	move.w	d1,d4
	mulu.w	bm24_Modulo(a0),d4
	lsr.w	#3,d0
	andi.l	#$FFFF,d0
	add.l	d0,d4

.loopX	move.l	a0,-(sp)

	lea.l	bm24_Planes(a0),a0
	bsr.w	GetChunky24		; regs : D0 D1 d4 a0 A2

	move.b	d0,9(a1)	;0123
	swap.w	d0		;2301
	move.b	d0,3(a1)
	ror.l	#8,d0		;1230
	move.b	d0,0(a1)
	swap.w	d0		;3012
	move.b	d0,6(a1)

	move.b	d3,21(a1)	;0123
	swap.w	d3		;2301
	move.b	d3,15(a1)
	ror.l	#8,d3		;1230
	move.b	d3,12(a1)
	swap.w	d3		;3012
	move.b	d3,18(a1)

	lea.l	(8*4)(a0),a0
	bsr.w	GetChunky24

	move.b	d0,10(a1)
	swap.w	d0
	move.b	d0,4(a1)
	ror.l	#8,d0
	move.b	d0,1(a1)
	swap.w	d0
	move.b	d0,7(a1)

	move.b	d3,22(a1)
	swap.w	d3
	move.b	d3,16(a1)
	ror.l	#8,d3
	move.b	d3,13(a1)
	swap.w	d3
	move.b	d3,19(a1)

	lea.l	(8*4)(a0),a0
	bsr.w	GetChunky24

	move.b	d0,11(a1)
	swap.w	d0
	move.b	d0,5(a1)
	ror.l	#8,d0
	move.b	d0,2(a1)
	swap.w	d0
	move.b	d0,8(a1)

	move.b	d3,23(a1)
	swap.w	d3
	move.b	d3,17(a1)
	ror.l	#8,d3
	move.b	d3,14(a1)
	swap.w	d3
	move.b	d3,20(a1)

	move.l	(sp)+,a0
	adda.w	#3*8,a1

	addq.l	#1,d4
	dbra	d6,.loopX

	movem.w	(sp)+,d0/d1/d6
	addq.w	#1,d1
	dbra	d7,.loopY

.exit	movem.l	(sp)+,d2-d7/a2-a6
	rts


GetChunky24
	movea.l	(3*4)(a0),a2
	move.b	(a2,d4.l),d1	; plane 3	0003
	swap	d1		;		0300	
	movea.l	(7*4)(a0),a2
	move.b	(a2,d4.l),d1	; plane 7	0307
	rol.l	#8,d1		;		3070
	movea.l	(5*4)(a0),a2
	move.b	(a2,d4.l),d1	; plane 5	3075
	swap	d1		;		7530
	movea.l	(1*4)(a0),a2
	move.b	(a2,d4.l),d1	; plane 1	7531
	movea.l	(2*4)(a0),a2
	move.b	(a2,d4.l),d0	; plane 2	0002
	swap	d0		; 		0200
	movea.l	(6*4)(a0),a2
	move.b	(a2,d4.l),d0	; plane 6	0206
	rol.l	#8,d0		; 		2060
	movea.l	(4*4)(a0),a2
	move.b	(a2,d4.l),d0	; plane 4	2064
	swap	d0		; 		6420
	movea.l	(0*4)(a0),a2
	move.b	(a2,d4.l),d0	; plane 0 	6420

; D0 = a2b2c2d2e2f2g2h2 a0b0c0d0e0f0g0h0
; D1 = a3b3c3d3e3f3g3h3 a1b1c1d1e1f1g1h1

	move.l	d1,d2
	and.l	#$aaaaaaaa,d2
	and.l	#$55555555,d1

; D1 = --b3--d3--f3--h3 --b1--d1--f1--h1
; d2 = a3--c3--e3--g3-- a1--c1--e1--g1--

	move.l	d0,d3

	and.l	#$aaaaaaaa,d0
	and.l	#$55555555,d3

; D0 = a2--c2--e2--g2-- a0--c0--e0--g0--
; D3 = --b2--d2--f2--h2 --b0--d0--f0--h0

	lsr.l	#1,d0

; D0 = --a2--c2--e2--g2 --a0--c0--e0--g0

	or.l	d2,d0

; D0 = a3a2c3c2e3e2g3g2 a1a0c1c0e1e0g1g0

	add.l	d1,d1

; D1 = b3--d3--f3--h3-- b1--d1--f1--h1--
	
	or.l	d3,d1

; D1 = b3b2d3d2f3f2h3h2 b1b0d1d0f1f0h1h0

	move.l	d1,d2
	andi.l	#$00ff00ff,d2
	andi.l	#$ff00ff00,d1

; D1 = b3b2d3d2f3f2h3h2 ---------------
; D2 = ---------------- b1b0d1d0f1f0h1h0

	move.l	d0,d3
	andi.l	#$00ff00ff,d0
	andi.l	#$ff00ff00,d3

; D0 = ---------------- a1a0c1c0e1e0g1g0
; D3 = a3a2c3c2e3e2g3g2 ----------------

	lsr.l	#8,d3

; D3 = ---------------- a3a2c3c2e3e2g3g2

	lsl.l	#8,d2
	
; D2 = b1b0d1d0f1f0h1h0 ----------------

	or.l	d2,d0
	or.l	d3,d1
	
; D0 = b1b0d1d0f1f0h1h0 a1a0c1c0e1e0g1g0
; D1 = b3b2d3d2f3f2h3h2 a3a2c3c2e3e2g3g2

	move.l	d1,d2
	andi.l	#$33333333,d1
	andi.l	#$cccccccc,d2

; D1 = ----d3d2----h3h2 ----c3c2----g3g2
; D2 = b3b2----f3f2---- a3a2----e3e2----

	move.l	d0,d3
	andi.l	#$cccccccc,d0
	andi.l	#$33333333,d3


; D0 = b1b0----f1f0---- a1a0----e1e0----
; D3 = ----d1d0----h1h0 ----c1c0----g1g0

	lsl.l	#2,d1

; D1 = d3d2----h3h2---- c3c2----g3g2----

	or.l	d3,d1
		
; D1 = d3d2d1d0h3h2h1h0 c3c2c1c0g3g2g1g0

	lsr.l	#2,d0

; D0 = ----b1b0----f1f0 ----a1a0----e1e0

	or.l	d2,d0
	
; D0 = b3b2b1b0f3f2f1f0 a3a2a1a0e3e2e1e0
; D1 = d3d2d1d0h3h2h1h0 c3c2c1c0g3g2g1g0

	swap	d0

; D0 = b3b2b1b0f3f2f1f0 a3a2a1a0e3e2e1e0 ---------------- ----------------

	move.w	d0,d2
	move.w	d1,d0
	move.w	d2,d1
	
; D0 = b3b2b1b0f3f2f1f0 a3a2a1a0e3e2e1e0 d3d2d1d0h3h2h1h0 c3c2c1c0g3g2g1g0

	swap	d0
	
; D0 = d3d2d1d0h3h2h1h0 c3c2c1c0g3g2g1g0 b3b2b1b0f3f2f1f0 a3a2a1a0e3e2e1e0

	move.l	d0,d3
	andi.l	#$0f0f0f0f,d3
	andi.l	#$f0f0f0f0,d0

	move.l	d1,d2
	andi.l	#$0f0f0f0f,d2
	andi.l	#$f0f0f0f0,d1

; D0 = d3d2d1d0-------- c3c2c1c0-------- b3b2b1b0-------- a3a2a1a0--------
; D3 = --------h3h2h1h0 --------g3g2g1g0 --------f3f2f1f0 --------e3e2e1e0

	lsr.l	#4,d0

	or.l	d1,d0
	lsl.l	#4,d2

	or.l	d2,d3
	
; D0 = --------d3d2d1d0 --------c3c2c1c0 --------b3b2b1b0 --------a3a2a1a0

	ror.w	#8,d0
	swap	d0
	ror.w	#8,d0

; D0 = abcd

	ror.w	#8,d3
	swap	d3
	ror.w	#8,d3

; d3 = efgh
	rts
